{"ast":null,"code":"// import { combineReducers } from 'redux';\nfunction newMachineReducer(state = {\n  clickedAssemblyId: null,\n  machine: {\n    assemblies: []\n  },\n  model: {\n    allAssemblies: [],\n    remainingAssemblies: []\n  }\n}, action) {\n  switch (action.type) {\n    case 'ADD_MODEL':\n      return Object.assign({}, { ...state\n      }, {\n        modelId: action.modelId\n      });\n\n    case 'ADD_ALL_ASSEMBLIES':\n      const requiredAssemblies = action.assemblies.filter(assembly => assembly.required_assembly);\n      const unrequiredAssemblies = action.assemblies.filter(assembly => !assembly.required_assembly);\n      return { ...state,\n        model: { ...state.model,\n          allAssemblies: action.assemblies,\n          remainingAssemblies: unrequiredAssemblies\n        }\n      };\n\n    case 'ADD_ASSEMBLY':\n      console.log(action.assembly.name);\n      const indexOfAddedAssembly = state.model.remainingAssemblies.indexOf(action.assembly);\n      return { ...state,\n        clickedAssemblyId: action.assembly.id,\n        machine: { ...state.machine,\n          assemblies: [...state.machine.assemblies, action.assembly]\n        },\n        model: { ...state.model,\n          remainingAssemblies: [...state.model.remainingAssemblies.slice(0, indexOfAddedAssembly), ...state.model.remainingAssemblies.slice(indexOfAddedAssembly + 1)]\n        }\n      };\n\n    case 'REMOVE_CLICKED_ID':\n      return { ...state,\n        clickedAssemblyId: null\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport default newMachineReducer;","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/reducers/newMachineReducer.js"],"names":["newMachineReducer","state","clickedAssemblyId","machine","assemblies","model","allAssemblies","remainingAssemblies","action","type","Object","assign","modelId","requiredAssemblies","filter","assembly","required_assembly","unrequiredAssemblies","console","log","name","indexOfAddedAssembly","indexOf","id","slice"],"mappings":"AAAA;AAEA,SAASA,iBAAT,CAA2BC,KAAK,GAAG;AACjCC,EAAAA,iBAAiB,EAAE,IADc;AAEjCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL,GAFwB;AAKjCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE,EADV;AAELC,IAAAA,mBAAmB,EAAE;AAFhB;AAL0B,CAAnC,EASGC,MATH,EASW;AACT,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,EAAC,GAAGV;AAAJ,OAAlB,EAA8B;AAACW,QAAAA,OAAO,EAAEJ,MAAM,CAACI;AAAjB,OAA9B,CAAP;;AACF,SAAK,oBAAL;AACE,YAAMC,kBAAkB,GAAGL,MAAM,CAACJ,UAAP,CAAkBU,MAAlB,CAA0BC,QAAQ,IAAIA,QAAQ,CAACC,iBAA/C,CAA3B;AACA,YAAMC,oBAAoB,GAAGT,MAAM,CAACJ,UAAP,CAAkBU,MAAlB,CAA0BC,QAAQ,IAAI,CAACA,QAAQ,CAACC,iBAAhD,CAA7B;AACA,aAAO,EACL,GAAGf,KADE;AAEHI,QAAAA,KAAK,EAAE,EACL,GAAGJ,KAAK,CAACI,KADJ;AAEHC,UAAAA,aAAa,EAAEE,MAAM,CAACJ,UAFnB;AAGHG,UAAAA,mBAAmB,EAAEU;AAHlB;AAFJ,OAAP;;AAQF,SAAK,cAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACO,QAAP,CAAgBK,IAA5B;AACA,YAAMC,oBAAoB,GAAGpB,KAAK,CAACI,KAAN,CAAYE,mBAAZ,CAAgCe,OAAhC,CAAwCd,MAAM,CAACO,QAA/C,CAA7B;AACA,aAAO,EACL,GAAGd,KADE;AAEHC,QAAAA,iBAAiB,EAAEM,MAAM,CAACO,QAAP,CAAgBQ,EAFhC;AAGHpB,QAAAA,OAAO,EAAE,EACP,GAAGF,KAAK,CAACE,OADF;AAELC,UAAAA,UAAU,EAAE,CAAC,GAAGH,KAAK,CAACE,OAAN,CAAcC,UAAlB,EAA8BI,MAAM,CAACO,QAArC;AAFP,SAHN;AAOHV,QAAAA,KAAK,EAAE,EACL,GAAGJ,KAAK,CAACI,KADJ;AAEHE,UAAAA,mBAAmB,EAAE,CAAC,GAAGN,KAAK,CAACI,KAAN,CAAYE,mBAAZ,CAAgCiB,KAAhC,CAAsC,CAAtC,EAAyCH,oBAAzC,CAAJ,EAAoE,GAAGpB,KAAK,CAACI,KAAN,CAAYE,mBAAZ,CAAgCiB,KAAhC,CAAsCH,oBAAoB,GAAG,CAA7D,CAAvE;AAFlB;AAPJ,OAAP;;AAYF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGpB,KADE;AAEHC,QAAAA,iBAAiB,EAAE;AAFhB,OAAP;;AAIF;AACE,aAAO,EAAC,GAAGD;AAAJ,OAAP;AAnCJ;AAqCD;;AAED,eAAeD,iBAAf","sourcesContent":["// import { combineReducers } from 'redux';\r\n\r\nfunction newMachineReducer(state = {\r\n  clickedAssemblyId: null,\r\n  machine: {\r\n    assemblies: []\r\n  },\r\n  model: {\r\n    allAssemblies: [],\r\n    remainingAssemblies: []\r\n  }\r\n}, action) {\r\n  switch (action.type) {\r\n    case 'ADD_MODEL':\r\n      return Object.assign({}, {...state}, {modelId: action.modelId})\r\n    case 'ADD_ALL_ASSEMBLIES':\r\n      const requiredAssemblies = action.assemblies.filter( assembly => assembly.required_assembly)\r\n      const unrequiredAssemblies = action.assemblies.filter( assembly => !assembly.required_assembly)\r\n      return {\r\n        ...state,\r\n          model: {\r\n            ...state.model,\r\n              allAssemblies: action.assemblies,\r\n              remainingAssemblies: unrequiredAssemblies\r\n          }\r\n      }\r\n    case 'ADD_ASSEMBLY':\r\n      console.log(action.assembly.name)\r\n      const indexOfAddedAssembly = state.model.remainingAssemblies.indexOf(action.assembly)\r\n      return {\r\n        ...state,\r\n          clickedAssemblyId: action.assembly.id,\r\n          machine: {\r\n            ...state.machine,\r\n              assemblies: [...state.machine.assemblies, action.assembly]\r\n          },\r\n          model: {\r\n            ...state.model,\r\n              remainingAssemblies: [...state.model.remainingAssemblies.slice(0, indexOfAddedAssembly), ...state.model.remainingAssemblies.slice(indexOfAddedAssembly + 1)]\r\n          }\r\n      }\r\n    case 'REMOVE_CLICKED_ID':\r\n      return {\r\n        ...state,\r\n          clickedAssemblyId: null\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default newMachineReducer;\r\n"]},"metadata":{},"sourceType":"module"}