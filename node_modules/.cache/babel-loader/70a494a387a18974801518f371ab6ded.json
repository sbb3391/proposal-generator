{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst pdf = machine => {\n  let itemsTable = {\n    table: {\n      body: [[{\n        text: 'All of the items in this configuration',\n        colSpan: 2\n      }], []]\n    }\n  };\n\n  const addMachineItems = (itemsTable, machineAssemblies) => {\n    let newItemsTable = itemsTable; // This needs to be simpler. Items array should be defined in state because it is used in multiple other places.\n\n    let itemsArray = [];\n    machineAssemblies.forEach(mi => {\n      mi.items.forEach(item => {\n        itemsArray.push(item);\n      });\n    });\n    itemsArray.forEach(item => {\n      switch (newItemsTable.table.body[newItemsTable.table.body.length - 1].length) {\n        case 0:\n          newItemsTable.table.body[newItemsTable.table.body.length - 1].push(new Array(item.description));\n\n        case 1:\n          newItemsTable.table.body[newItemsTable.table.body.length - 1].push(new Array(item.description));\n\n        case 2:\n          const newRow = [];\n      }\n    });\n    return addItemsToDd(dd, newItemsTable);\n  };\n\n  const addItemsToDd = (documentData, machineItems) => {\n    const newDd = { ...documentData,\n      content: [...documentData.content, machineItems]\n    };\n    return newDd;\n  };\n\n  let dd = {\n    content: [{\n      text: 'This paragraph uses header style and extends the alignment property',\n      style: 'header',\n      alignment: 'center'\n    }]\n  };\n  console.log(\"addMachineItems\", addMachineItems(itemsTable, machine.assemblies));\n  pdfMake.createPdf(addMachineItems(itemsTable, machine.assemblies)).open();\n};\n\nexport { pdf };","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/pdf.js"],"names":["pdfMake","pdfFonts","vfs","pdf","machine","itemsTable","table","body","text","colSpan","addMachineItems","machineAssemblies","newItemsTable","itemsArray","forEach","mi","items","item","push","length","Array","description","newRow","addItemsToDd","dd","documentData","machineItems","newDd","content","style","alignment","console","log","assemblies","createPdf","open"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACAD,OAAO,CAACE,GAAR,GAAcD,QAAQ,CAACD,OAAT,CAAiBE,GAA/B;;AAEA,MAAMC,GAAG,GAAIC,OAAD,IAAa;AAEvB,MAAIC,UAAU,GAAG;AACfC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CACJ,CAAC;AAACC,QAAAA,IAAI,EAAE,wCAAP;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAD,CADI,EAEJ,EAFI;AADD;AADQ,GAAjB;;AASA,QAAMC,eAAe,GAAG,CAACL,UAAD,EAAaM,iBAAb,KAAmC;AAEzD,QAAIC,aAAa,GAAGP,UAApB,CAFyD,CAGzD;;AACA,QAAIQ,UAAU,GAAG,EAAjB;AAEAF,IAAAA,iBAAiB,CAACG,OAAlB,CAA4BC,EAAD,IAAQ;AACjCA,MAAAA,EAAE,CAACC,KAAH,CAASF,OAAT,CAAkBG,IAAI,IAAI;AACxBJ,QAAAA,UAAU,CAACK,IAAX,CAAgBD,IAAhB;AACD,OAFD;AAID,KALD;AAOAJ,IAAAA,UAAU,CAACC,OAAX,CAAoBG,IAAI,IAAI;AAC1B,cAAQL,aAAa,CAACN,KAAd,CAAoBC,IAApB,CAAyBK,aAAa,CAACN,KAAd,CAAoBC,IAApB,CAAyBY,MAAzB,GAAkC,CAA3D,EAA8DA,MAAtE;AACE,aAAK,CAAL;AACIP,UAAAA,aAAa,CAACN,KAAd,CAAoBC,IAApB,CAAyBK,aAAa,CAACN,KAAd,CAAoBC,IAApB,CAAyBY,MAAzB,GAAkC,CAA3D,EAA8DD,IAA9D,CAAmE,IAAIE,KAAJ,CAAUH,IAAI,CAACI,WAAf,CAAnE;;AACJ,aAAK,CAAL;AACET,UAAAA,aAAa,CAACN,KAAd,CAAoBC,IAApB,CAAyBK,aAAa,CAACN,KAAd,CAAoBC,IAApB,CAAyBY,MAAzB,GAAkC,CAA3D,EAA8DD,IAA9D,CAAmE,IAAIE,KAAJ,CAAUH,IAAI,CAACI,WAAf,CAAnE;;AACF,aAAK,CAAL;AACE,gBAAMC,MAAM,GAAG,EAAf;AANJ;AASD,KAVD;AAYA,WAAOC,YAAY,CAACC,EAAD,EAAKZ,aAAL,CAAnB;AACD,GA1BD;;AA6BA,QAAMW,YAAY,GAAG,CAACE,YAAD,EAAeC,YAAf,KAAgC;AACpD,UAAMC,KAAK,GAAG,EACZ,GAAGF,YADS;AAEZG,MAAAA,OAAO,EAAE,CACP,GAAGH,YAAY,CAACG,OADT,EAEPF,YAFO;AAFG,KAAd;AAQC,WAAOC,KAAP;AACD,GAVD;;AAYA,MAAIH,EAAE,GAAG;AACPI,IAAAA,OAAO,EAAE,CACP;AACEpB,MAAAA,IAAI,EAAE,qEADR;AAEEqB,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADO;AADF,GAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BtB,eAAe,CAACL,UAAD,EAAaD,OAAO,CAAC6B,UAArB,CAA9C;AAEAjC,EAAAA,OAAO,CAACkC,SAAR,CAAkBxB,eAAe,CAACL,UAAD,EAAaD,OAAO,CAAC6B,UAArB,CAAjC,EAAmEE,IAAnE;AAED,CAnED;;AAqEA,SAAShC,GAAT","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst pdf = (machine) => {\r\n\r\n  let itemsTable = {\r\n    table: {\r\n      body: [\r\n        [{text: 'All of the items in this configuration', colSpan: 2}],\r\n        []\r\n      ]\r\n    }\r\n  }\r\n\r\n  const addMachineItems = (itemsTable, machineAssemblies) => {\r\n\r\n    let newItemsTable = itemsTable\r\n    // This needs to be simpler. Items array should be defined in state because it is used in multiple other places.\r\n    let itemsArray = []\r\n\r\n    machineAssemblies.forEach( (mi) => {\r\n      mi.items.forEach( item => {\r\n        itemsArray.push(item)\r\n      })\r\n      \r\n    })\r\n\r\n    itemsArray.forEach( item => {\r\n      switch (newItemsTable.table.body[newItemsTable.table.body.length - 1].length) {\r\n        case 0:\r\n            newItemsTable.table.body[newItemsTable.table.body.length - 1].push(new Array(item.description));\r\n        case 1:\r\n          newItemsTable.table.body[newItemsTable.table.body.length - 1].push(new Array(item.description));\r\n        case 2:\r\n          const newRow = []\r\n      }\r\n\r\n    })\r\n\r\n    return addItemsToDd(dd, newItemsTable)\r\n  }\r\n\r\n\r\n  const addItemsToDd = (documentData, machineItems) => {\r\n   const newDd = {\r\n     ...documentData,\r\n     content: [\r\n       ...documentData.content,\r\n       machineItems\r\n     ]\r\n   }\r\n\r\n    return newDd\r\n  }\r\n\r\n  let dd = {\r\n    content: [\r\n      {\r\n        text: 'This paragraph uses header style and extends the alignment property',\r\n        style: 'header',\r\n        alignment: 'center'\r\n      }\r\n      \r\n    ]\r\n  }\r\n\r\n  console.log(\"addMachineItems\", addMachineItems(itemsTable, machine.assemblies))\r\n  \r\n  pdfMake.createPdf(addMachineItems(itemsTable, machine.assemblies)).open();\r\n\r\n}\r\n\r\nexport { pdf }"]},"metadata":{},"sourceType":"module"}