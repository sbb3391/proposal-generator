{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EnginePick extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectAssemblies: [],\n      selectedParts: [],\n      activeAssemblyId: ''\n    };\n\n    this.handleAdd = e => {\n      this.setState({});\n    };\n\n    this.renderAssemblies = () => {\n      return this.state.selectAssemblies.map(assembly => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assembly bg-blue-200 w-1/6 h-32 flex place-items-center justify-center cursor-pointer\",\n          id: assembly.id,\n          onClick: this.handleAdd,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center font-bold\",\n            children: assembly.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`).then(resp => resp.json()).then(json => {\n      const mainUnitAssemblies = json.filter(assembly => assembly.assembly_type === \"main unit\");\n      this.setState({\n        selectAssemblies: mainUnitAssemblies\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-11/12 mx-auto h-3/4 flex\",\n      children: [render, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-16 place-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl text-center pt-8\",\n          children: \"Select Assemblies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3/4 flex flex-wrap space-x-6\",\n          id: \"select-assemblies\",\n          children: this.renderAssemblies()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 h-full\",\n        id: \"selected-items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  modelId: state.modelId\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js"],"names":["React","Component","connect","EnginePick","state","selectAssemblies","selectedParts","activeAssemblyId","handleAdd","e","setState","renderAssemblies","map","assembly","id","name","componentDidMount","console","log","fetch","props","modelId","then","resp","json","mainUnitAssemblies","filter","assembly_type","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCG,KAFiC,GAEzB;AACNC,MAAAA,gBAAgB,EAAE,EADZ;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,gBAAgB,EAAE;AAHZ,KAFyB;;AAAA,SAsBjCC,SAtBiC,GAsBpBC,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc,EAAd;AAGD,KA1BgC;;AAAA,SA6BjCC,gBA7BiC,GA6Bd,MAAM;AACvB,aAAO,KAAKP,KAAL,CAAWC,gBAAX,CAA4BO,GAA5B,CAAiCC,QAAQ,IAAI;AAClD,4BACE;AAAK,UAAA,SAAS,EAAC,uFAAf;AAAuG,UAAA,EAAE,EAAEA,QAAQ,CAACC,EAApH;AAAuH,UAAA,OAAO,EAAE,KAAKN,SAArI;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,uBAAd;AAAA,sBAAuCK,QAAQ,CAACE;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANM,CAAP;AAOD,KArCgC;AAAA;;AAQjCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,IAAAA,KAAK,CAAE,gCAA+B,KAAKC,KAAL,CAAWC,OAAQ,aAApD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,YAAMC,kBAAkB,GAAGD,IAAI,CAACE,MAAL,CAAab,QAAQ,IAAIA,QAAQ,CAACc,aAAT,KAA2B,WAApD,CAA3B;AAEA,WAAKjB,QAAL,CAAc;AACZL,QAAAA,gBAAgB,EAAEoB;AADN,OAAd;AAGD,KARD;AAUD;;AAmBDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,iBACGA,MADH,eAEE;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAgD,UAAA,EAAE,EAAC,mBAAnD;AAAA,oBACG,KAAKjB,gBAAL;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAvDgC;;AA0DnC,MAAMkB,eAAe,GAAGzB,KAAK,KAC3B;AAACiB,EAAAA,OAAO,EAAEjB,KAAK,CAACiB;AAAhB,CAD2B,CAA7B;;AAIA,MAAMS,kBAAkB,GAAGC,QAAQ,KACjC,EADiC,CAAnC;;AAMA,eAAe7B,OAAO,CAAC2B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C3B,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass EnginePick extends Component {\r\n\r\n  state = {\r\n    selectAssemblies: [],\r\n    selectedParts: [],\r\n    activeAssemblyId: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\")\r\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`)\r\n    .then(resp => resp.json())\r\n    .then(json => {\r\n      const mainUnitAssemblies = json.filter( assembly => assembly.assembly_type === \"main unit\")\r\n\r\n      this.setState({\r\n        selectAssemblies: mainUnitAssemblies\r\n      })\r\n    })\r\n  \r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n\r\n  renderAssemblies = () => {\r\n    return this.state.selectAssemblies.map( assembly => {\r\n      return(\r\n        <div className=\"assembly bg-blue-200 w-1/6 h-32 flex place-items-center justify-center cursor-pointer\" id={assembly.id}onClick={this.handleAdd}>\r\n          <h1 className=\"text-center font-bold\">{assembly.name}</h1>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-11/12 mx-auto h-3/4 flex\">\r\n        {render}\r\n        <div className=\"flex flex-col space-y-16 place-items-center\">\r\n          <h1 className=\"text-2xl text-center pt-8\">Select Assemblies:</h1>\r\n          <div className=\"w-3/4 flex flex-wrap space-x-6\" id=\"select-assemblies\">\r\n            {this.renderAssemblies()}\r\n          </div>\r\n        </div>\r\n        <div className=\"w-1/4 h-full\" id=\"selected-items\">\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {modelId: state.modelId}\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {}\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick)\r\n"]},"metadata":{},"sourceType":"module"}