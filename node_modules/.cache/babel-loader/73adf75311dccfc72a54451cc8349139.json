{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/UnitAssembly.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UnitAssembly extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeAssemblyFromMachine = () => {\n      debugger;\n    };\n\n    this.renderAssembliesAndItems = () => {\n      const filteredAssemblies = this.props.assemblies.filter(assembly => assembly.assembly_type == this.props.assemblyName);\n      return filteredAssemblies.map(assembly => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-1 w-11/12 mx-auto border rounded-md bg-blue-100 flex flex-col\",\n          children: [assembly.required_assembly ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold border rounded-md bg-blue-100\",\n            children: assembly.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold hover:text-color-red-500 cursor-pointer hover:underline hover:text-red-500\",\n            onClick: this.removeAssemblyFromMachine,\n            children: assembly.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), assembly.items.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [item.required ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"w-8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 35\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs pl-4 cursor-pointer\",\n                children: \"\\u274C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 67\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col pt-2 space-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center pl-2 underline mb-1\",\n        children: this.props.assemblyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), this.renderAssembliesAndItems()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst mapStateToProps = state => ({\n  assemblies: state.machine.assemblies\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitAssembly);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/UnitAssembly.js"],"names":["React","Component","connect","UnitAssembly","removeAssemblyFromMachine","renderAssembliesAndItems","filteredAssemblies","props","assemblies","filter","assembly","assembly_type","assemblyName","map","required_assembly","name","items","item","required","description","render","mapDispatchToProps","dispatch","mapStateToProps","state","machine"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAEnCG,yBAFmC,GAEP,MAAM;AAChC;AACD,KAJkC;;AAAA,SAMnCC,wBANmC,GAMR,MAAM;AAC/B,YAAMC,kBAAkB,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACC,aAAT,IAA0B,KAAKJ,KAAL,CAAWK,YAA/E,CAA3B;AAEA,aAAON,kBAAkB,CAACO,GAAnB,CAAwBH,QAAQ,IAAI;AACzC,4BACE;AAAK,UAAA,SAAS,EAAC,kEAAf;AAAA,qBACIA,QAAQ,CAACI,iBAAT,gBAA6B;AAAI,YAAA,SAAS,EAAC,yCAAd;AAAA,sBAAyDJ,QAAQ,CAACK;AAAlE;AAAA;AAAA;AAAA;AAAA,kBAA7B,gBACA;AAAI,YAAA,SAAS,EAAC,sFAAd;AAAqG,YAAA,OAAO,EAAE,KAAKX,yBAAnH;AAAA,sBAA+IM,QAAQ,CAACK;AAAxJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIGL,QAAQ,CAACM,KAAT,CAAeH,GAAf,CAAoBI,IAAI,IAAI;AAC3B,gCACE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,yBACIA,IAAI,CAACC,QAAL,gBAAgB;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAAhB,gBAAgD;AAAM,gBAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADpD,eAEE;AAAM,gBAAA,SAAS,EAAC,SAAhB;AAAA,0BAA2BD,IAAI,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD,OAjBM,CAAP;AAkBD,KA3BkC;AAAA;;AA6BnCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iCAAd;AAAA,kBAAiD,KAAKb,KAAL,CAAWK;AAA5D;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKP,wBAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApCkC;;AAuCrC,MAAMgB,kBAAkB,GAAIC,QAAD,KACzB,EADyB,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KACtB;AAAChB,EAAAA,UAAU,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AAA3B,CADsB,CAAxB;;AAIA,eAAeN,OAAO,CAACqB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6ClB,YAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UnitAssembly extends Component {\r\n\r\n  removeAssemblyFromMachine = () => {\r\n    debugger;\r\n  }\r\n\r\n  renderAssembliesAndItems = () => {\r\n    const filteredAssemblies = this.props.assemblies.filter( assembly => assembly.assembly_type == this.props.assemblyName)\r\n\r\n    return filteredAssemblies.map( assembly => {\r\n      return(\r\n        <div className=\"px-1 w-11/12 mx-auto border rounded-md bg-blue-100 flex flex-col\">\r\n          { assembly.required_assembly ? <h3 className=\"font-bold border rounded-md bg-blue-100\">{assembly.name}</h3> : \r\n            <h3 className=\"font-bold hover:text-color-red-500 cursor-pointer hover:underline hover:text-red-500\" onClick={this.removeAssemblyFromMachine}>{assembly.name}</h3>\r\n          }\r\n          {assembly.items.map( item => {\r\n            return(\r\n              <div className=\"flex space-x-2\">\r\n                { item.required ? <span className=\"w-8\"></span> : <span className=\"text-xs pl-4 cursor-pointer\">&#10060;</span> }\r\n                <span className=\"text-xs\">{item.description}</span>\r\n              </div>\r\n\r\n            )\r\n          })}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-col pt-2 space-y-1\">\r\n        <h1 className=\"text-center pl-2 underline mb-1\">{this.props.assemblyName}</h1>\r\n        {this.renderAssembliesAndItems()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {}\r\n)\r\n\r\nconst mapStateToProps = (state) => (\r\n  {assemblies: state.machine.assemblies}\r\n)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitAssembly);"]},"metadata":{},"sourceType":"module"}