{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/MachineOverview.js\";\nimport React, { Component } from 'react';\nimport numeral from 'numeral';\nimport Pdf from './Pdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MachineOverview extends Component {\n  render() {\n    let priceArray = [];\n\n    if (this.props.machineAssemblies.length > 0) {\n      this.props.machineAssemblies.forEach(assembly => assembly.items.forEach(item => priceArray.push(item.branchFloor)));\n    }\n\n    const totalPrice = priceArray.reduce((a, b) => parseFloat(a) + parseFloat(b), 0); // const SellingTotal \n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Machine Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: [\"Total Price: \", numeral(totalPrice).format('$0,0.00')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.generatePdf,\n        className: \"border border-black rounded-md w-36\",\n        children: \"Generate PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default MachineOverview;","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/MachineOverview.js"],"names":["React","Component","numeral","Pdf","MachineOverview","render","priceArray","props","machineAssemblies","length","forEach","assembly","items","item","push","branchFloor","totalPrice","reduce","a","b","parseFloat","format","generatePdf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACtCI,EAAAA,MAAM,GAAG;AAEP,QAAIC,UAAU,GAAG,EAAjB;;AAEA,QAAI,KAAKC,KAAL,CAAWC,iBAAX,CAA6BC,MAA7B,GAAsC,CAA1C,EAA6C;AAC3C,WAAKF,KAAL,CAAWC,iBAAX,CAA6BE,OAA7B,CAAqCC,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeF,OAAf,CAAwBG,IAAI,IAAIP,UAAU,CAACQ,IAAX,CAAgBD,IAAI,CAACE,WAArB,CAAhC,CAAjD;AACD;;AAED,UAAMC,UAAU,GAAGV,UAAU,CAACW,MAAX,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACF,CAAD,CAAV,GAAgBE,UAAU,CAACD,CAAD,CAAtD,EAA2D,CAA3D,CAAnB,CARO,CASP;;AACA,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,oCAA0CjB,OAAO,CAACc,UAAD,CAAP,CAAoBK,MAApB,CAA2B,SAA3B,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAmC,QAAA,SAAS,EAAC,qCAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAOD;;AAlBqC;;AAqBxC,eAAelB,eAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport numeral from 'numeral';\r\nimport Pdf from './Pdf'\r\n\r\nclass MachineOverview extends Component {\r\n  render() {\r\n\r\n    let priceArray = [];\r\n\r\n    if (this.props.machineAssemblies.length > 0) {\r\n      this.props.machineAssemblies.forEach(assembly => assembly.items.forEach( item => priceArray.push(item.branchFloor)))\r\n    }\r\n\r\n    const totalPrice = priceArray.reduce((a, b) => parseFloat(a) + parseFloat(b), 0)\r\n    // const SellingTotal \r\n    return (\r\n      <>\r\n        <h1 className=\"text-center\">Machine Overview</h1>\r\n        <h1 className=\"text-center\">Total Price: {numeral(totalPrice).format('$0,0.00')}</h1>\r\n        <button onClick={this.generatePdf} className=\"border border-black rounded-md w-36\">Generate PDF</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MachineOverview;"]},"metadata":{},"sourceType":"module"}