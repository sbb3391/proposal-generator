{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PartsForAssembly from '../components/PartsForAssembly';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EnginePick extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectAssemblies: [],\n      selectedParts: [],\n      activeAssemblyId: null\n    };\n\n    this.handleAdd = e => {\n      debugger;\n      this.setState({\n        activeAssemblyId: e.target.id\n      });\n    };\n\n    this.renderPartsForAssembly = () => {\n      if (this.state.activeAssemblyId) {\n        return /*#__PURE__*/_jsxDEV(PartsForAssembly, {\n          assemblyId: this.state.activeAssemblyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.renderAssemblies = () => {\n      return this.state.selectAssemblies.map(assembly => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assembly bg-blue-200 w-1/6 h-32 flex place-items-center justify-center cursor-pointer\",\n          id: assembly.id,\n          onClick: this.handleAdd,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center font-bold\",\n            id: assembly.id,\n            children: assembly.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`).then(resp => resp.json()).then(json => {\n      const mainUnitAssemblies = json.filter(assembly => assembly.assembly_type === \"main unit\");\n      this.setState({\n        selectAssemblies: mainUnitAssemblies\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full flex\",\n      children: [this.renderPartsForAssembly(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-11/12 mx-auto h-3/4 flex z-10 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-16 place-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl text-center pt-8\",\n            children: \"Select Assemblies:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3/4 flex flex-wrap space-x-6\",\n            id: \"select-assemblies\",\n            children: this.renderAssemblies()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/4 h-full\",\n          id: \"selected-items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  modelId: state.modelId\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js"],"names":["React","Component","connect","PartsForAssembly","EnginePick","state","selectAssemblies","selectedParts","activeAssemblyId","handleAdd","e","setState","target","id","renderPartsForAssembly","renderAssemblies","map","assembly","name","componentDidMount","console","log","fetch","props","modelId","then","resp","json","mainUnitAssemblies","filter","assembly_type","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PartsForAssembly from '../components/PartsForAssembly'\r\n\r\nclass EnginePick extends Component {\r\n\r\n  state = {\r\n    selectAssemblies: [],\r\n    selectedParts: [],\r\n    activeAssemblyId: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\")\r\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`)\r\n    .then(resp => resp.json())\r\n    .then(json => {\r\n      const mainUnitAssemblies = json.filter( assembly => assembly.assembly_type === \"main unit\")\r\n\r\n      this.setState({\r\n        selectAssemblies: mainUnitAssemblies\r\n      })\r\n    })\r\n  \r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    debugger;\r\n    this.setState({\r\n      activeAssemblyId: e.target.id\r\n    })\r\n  }\r\n\r\n  renderPartsForAssembly = () => {\r\n    if (this.state.activeAssemblyId) {\r\n      return(<PartsForAssembly assemblyId={this.state.activeAssemblyId}/>)\r\n    }\r\n  }\r\n\r\n\r\n  renderAssemblies = () => {\r\n    return this.state.selectAssemblies.map( assembly => {\r\n      return(\r\n        <div className=\"assembly bg-blue-200 w-1/6 h-32 flex place-items-center justify-center cursor-pointer\" id={assembly.id} onClick={this.handleAdd}>\r\n          <h1 className=\"text-center font-bold\" id={assembly.id}>{assembly.name}</h1>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-full h-full flex\">\r\n        {this.renderPartsForAssembly()}\r\n        <div className=\"w-11/12 mx-auto h-3/4 flex z-10 relative\">\r\n          <div className=\"flex flex-col space-y-16 place-items-center\">\r\n            <h1 className=\"text-2xl text-center pt-8\">Select Assemblies:</h1>\r\n            <div className=\"w-3/4 flex flex-wrap space-x-6\" id=\"select-assemblies\">\r\n              {this.renderAssemblies()}\r\n            </div>\r\n          </div>\r\n          <div className=\"w-1/4 h-full\" id=\"selected-items\">\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {modelId: state.modelId}\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {}\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick)\r\n"]},"metadata":{},"sourceType":"module"}