{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst pdf = machine => {\n  // let itemsTable = {\n  //   table: {\n  //     body: [\n  //       [{text: 'All of the items in this configuration', colSpan: 2}],\n  //       []\n  //     ]\n  //   }\n  // }\n  let itemsArray = [];\n  let body = [[]];\n  machine.assemblies.forEach(mi => {\n    mi.items.forEach(item => {\n      itemsArray.push(item);\n    });\n  });\n  itemsArray.forEach(item => {\n    switch (itemsArray[itemsArray.length - 1].length) {\n      case 0:\n        let newElement = [];\n        newElement.push(item.description);\n        newTable.table.body[newTable.table.body.length - 1].push(newElement);\n        break;\n\n      case 1:\n        let newArrElement = [];\n        newArrElement.push(item.description);\n        newTable.table.body[newTable.table.body.length - 1].push(newArrElement);\n        break;\n\n      case 2:\n        let newRow = [[]];\n        newRow[0].push(item.description);\n        newTable.table.body.push(newRow);\n        break;\n    }\n  });\n  debugger;\n  let dd = {\n    content: [{\n      text: 'This paragraph uses header style and extends the alignment property',\n      style: 'header',\n      alignment: 'center'\n    }, {\n      table: {\n        body: itemsArray\n      }\n    }]\n  };\n  pdfMake.createPdf(dd).open();\n};\n\nexport { pdf };","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/pdf.js"],"names":["pdfMake","pdfFonts","vfs","pdf","machine","itemsArray","body","assemblies","forEach","mi","items","item","push","length","newElement","description","newTable","table","newArrElement","newRow","dd","content","text","style","alignment","createPdf","open"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACAD,OAAO,CAACE,GAAR,GAAcD,QAAQ,CAACD,OAAT,CAAiBE,GAA/B;;AAEA,MAAMC,GAAG,GAAIC,OAAD,IAAa;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,IAAI,GAAG,CAAC,EAAD,CAAX;AAEAF,EAAAA,OAAO,CAACG,UAAR,CAAmBC,OAAnB,CAA6BC,EAAD,IAAQ;AAClCA,IAAAA,EAAE,CAACC,KAAH,CAASF,OAAT,CAAkBG,IAAI,IAAI;AACxBN,MAAAA,UAAU,CAACO,IAAX,CAAgBD,IAAhB;AACD,KAFD;AAGD,GAJD;AAMAN,EAAAA,UAAU,CAACG,OAAX,CAAoBG,IAAI,IAAI;AAC1B,YAAQN,UAAU,CAACA,UAAU,CAACQ,MAAX,GAAoB,CAArB,CAAV,CAAkCA,MAA1C;AACE,WAAK,CAAL;AACE,YAAIC,UAAU,GAAG,EAAjB;AACAA,QAAAA,UAAU,CAACF,IAAX,CAAgBD,IAAI,CAACI,WAArB;AACAC,QAAAA,QAAQ,CAACC,KAAT,CAAeX,IAAf,CAAoBU,QAAQ,CAACC,KAAT,CAAeX,IAAf,CAAoBO,MAApB,GAA6B,CAAjD,EAAoDD,IAApD,CAAyDE,UAAzD;AACA;;AACF,WAAK,CAAL;AACE,YAAII,aAAa,GAAG,EAApB;AACAA,QAAAA,aAAa,CAACN,IAAd,CAAmBD,IAAI,CAACI,WAAxB;AACAC,QAAAA,QAAQ,CAACC,KAAT,CAAeX,IAAf,CAAoBU,QAAQ,CAACC,KAAT,CAAeX,IAAf,CAAoBO,MAApB,GAA6B,CAAjD,EAAoDD,IAApD,CAAyDM,aAAzD;AACA;;AACF,WAAK,CAAL;AACE,YAAIC,MAAM,GAAG,CAAC,EAAD,CAAb;AACAA,QAAAA,MAAM,CAAC,CAAD,CAAN,CAAUP,IAAV,CAAeD,IAAI,CAACI,WAApB;AACAC,QAAAA,QAAQ,CAACC,KAAT,CAAeX,IAAf,CAAoBM,IAApB,CAAyBO,MAAzB;AACA;AAfJ;AAiBD,GAlBD;AAoBA;AACA,MAAIC,EAAE,GAAG;AACPC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,qEADR;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADO,EAMP;AACEP,MAAAA,KAAK,EAAE;AACLX,QAAAA,IAAI,EAAED;AADD;AADT,KANO;AADF,GAAT;AAgBAL,EAAAA,OAAO,CAACyB,SAAR,CAAkBL,EAAlB,EAAsBM,IAAtB;AAED,CA5DD;;AA8DA,SAASvB,GAAT","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst pdf = (machine) => {\r\n\r\n  // let itemsTable = {\r\n  //   table: {\r\n  //     body: [\r\n  //       [{text: 'All of the items in this configuration', colSpan: 2}],\r\n  //       []\r\n  //     ]\r\n  //   }\r\n  // }\r\n\r\n\r\n  let itemsArray = []\r\n  let body = [[]]\r\n\r\n  machine.assemblies.forEach( (mi) => {\r\n    mi.items.forEach( item => {\r\n      itemsArray.push(item)\r\n    })\r\n  })\r\n\r\n  itemsArray.forEach( item => {\r\n    switch (itemsArray[itemsArray.length - 1].length) {\r\n      case 0:\r\n        let newElement = []\r\n        newElement.push(item.description)\r\n        newTable.table.body[newTable.table.body.length - 1].push(newElement);\r\n        break\r\n      case 1:\r\n        let newArrElement = []\r\n        newArrElement.push(item.description)\r\n        newTable.table.body[newTable.table.body.length - 1].push(newArrElement);\r\n        break\r\n      case 2:\r\n        let newRow = [[]]\r\n        newRow[0].push(item.description)\r\n        newTable.table.body.push(newRow)\r\n        break\r\n    }\r\n  })\r\n  \r\n  debugger; \r\n  let dd = {\r\n    content: [\r\n      {\r\n        text: 'This paragraph uses header style and extends the alignment property',\r\n        style: 'header',\r\n        alignment: 'center'\r\n      },\r\n      {\r\n        table: {\r\n          body: itemsArray\r\n        }\r\n      }\r\n      \r\n    ]\r\n  }\r\n  \r\n  pdfMake.createPdf(dd).open();\r\n\r\n}\r\n\r\nexport { pdf }"]},"metadata":{},"sourceType":"module"}