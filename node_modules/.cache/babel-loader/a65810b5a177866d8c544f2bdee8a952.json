{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst pdf = machine => {\n  // let itemsTable = {\n  //   table: {\n  //     body: [\n  //       [{text: 'All of the items in this configuration', colSpan: 2}],\n  //       []\n  //     ]\n  //   }\n  // }\n  let itemsArray = [];\n  let body = [[]];\n  machine.assemblies.forEach(mi => {\n    mi.items.forEach(item => {\n      itemsArray.push(item);\n    });\n  });\n  itemsArray.forEach(item => {\n    console.log(body);\n\n    switch (body[body.length - 1].length) {\n      case 0:\n        let newElement = item.description;\n        body[body.length - 1].push(newElement);\n        break;\n\n      case 1:\n        let newArrElement = [];\n        newArrElement.push(item.description);\n        body.push(newArrElement);\n        break;\n\n      case 2:\n        let newRow = [[]];\n        newRow[0].push(item.description);\n        body.push(newRow);\n        break;\n    }\n  });\n  let dd = {\n    content: [{\n      text: 'This paragraph uses header style and extends the alignment property',\n      style: 'header',\n      alignment: 'center'\n    }, {\n      table: {\n        widths: [300, 300],\n        body: body\n      }\n    }]\n  };\n  debugger;\n  pdfMake.createPdf(dd).open();\n};\n\nexport { pdf };","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/pdf.js"],"names":["pdfMake","pdfFonts","vfs","pdf","machine","itemsArray","body","assemblies","forEach","mi","items","item","push","console","log","length","newElement","description","newArrElement","newRow","dd","content","text","style","alignment","table","widths","createPdf","open"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACAD,OAAO,CAACE,GAAR,GAAcD,QAAQ,CAACD,OAAT,CAAiBE,GAA/B;;AAEA,MAAMC,GAAG,GAAIC,OAAD,IAAa;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,IAAI,GAAG,CAAC,EAAD,CAAX;AAEAF,EAAAA,OAAO,CAACG,UAAR,CAAmBC,OAAnB,CAA6BC,EAAD,IAAQ;AAClCA,IAAAA,EAAE,CAACC,KAAH,CAASF,OAAT,CAAkBG,IAAI,IAAI;AACxBN,MAAAA,UAAU,CAACO,IAAX,CAAgBD,IAAhB;AACD,KAFD;AAGD,GAJD;AAMAN,EAAAA,UAAU,CAACG,OAAX,CAAoBG,IAAI,IAAI;AAC1BE,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,YAAQA,IAAI,CAACA,IAAI,CAACS,MAAL,GAAc,CAAf,CAAJ,CAAsBA,MAA9B;AACE,WAAK,CAAL;AACE,YAAIC,UAAU,GAAGL,IAAI,CAACM,WAAtB;AACAX,QAAAA,IAAI,CAACA,IAAI,CAACS,MAAL,GAAc,CAAf,CAAJ,CAAsBH,IAAtB,CAA2BI,UAA3B;AACA;;AACF,WAAK,CAAL;AACE,YAAIE,aAAa,GAAG,EAApB;AACAA,QAAAA,aAAa,CAACN,IAAd,CAAmBD,IAAI,CAACM,WAAxB;AACAX,QAAAA,IAAI,CAACM,IAAL,CAAUM,aAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIC,MAAM,GAAG,CAAC,EAAD,CAAb;AACAA,QAAAA,MAAM,CAAC,CAAD,CAAN,CAAUP,IAAV,CAAeD,IAAI,CAACM,WAApB;AACAX,QAAAA,IAAI,CAACM,IAAL,CAAUO,MAAV;AACA;AAdJ;AAgBD,GAlBD;AAoBA,MAAIC,EAAE,GAAG;AACPC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,qEADR;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADO,EAMP;AACEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,CADH;AAELpB,QAAAA,IAAI,EAAEA;AAFD;AADT,KANO;AADF,GAAT;AAiBA;AAEAN,EAAAA,OAAO,CAAC2B,SAAR,CAAkBP,EAAlB,EAAsBQ,IAAtB;AAED,CA9DD;;AAgEA,SAASzB,GAAT","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst pdf = (machine) => {\r\n\r\n  // let itemsTable = {\r\n  //   table: {\r\n  //     body: [\r\n  //       [{text: 'All of the items in this configuration', colSpan: 2}],\r\n  //       []\r\n  //     ]\r\n  //   }\r\n  // }\r\n\r\n\r\n  let itemsArray = []\r\n  let body = [[]]\r\n\r\n  machine.assemblies.forEach( (mi) => {\r\n    mi.items.forEach( item => {\r\n      itemsArray.push(item)\r\n    })\r\n  })\r\n\r\n  itemsArray.forEach( item => {\r\n    console.log(body)\r\n    switch (body[body.length - 1].length) {\r\n      case 0:\r\n        let newElement = item.description\r\n        body[body.length - 1].push(newElement);\r\n        break\r\n      case 1:\r\n        let newArrElement = []\r\n        newArrElement.push(item.description)\r\n        body.push(newArrElement);\r\n        break\r\n      case 2:\r\n        let newRow = [[]]\r\n        newRow[0].push(item.description)\r\n        body.push(newRow)\r\n        break\r\n    }\r\n  })\r\n   \r\n  let dd = {\r\n    content: [\r\n      {\r\n        text: 'This paragraph uses header style and extends the alignment property',\r\n        style: 'header',\r\n        alignment: 'center'\r\n      },\r\n      {\r\n        table: {\r\n          widths: [300, 300],\r\n          body: body\r\n        }\r\n      }\r\n      \r\n    ]\r\n  }\r\n\r\n  debugger;\r\n  \r\n  pdfMake.createPdf(dd).open();\r\n\r\n}\r\n\r\nexport { pdf }"]},"metadata":{},"sourceType":"module"}