{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/PickModel.js\";\nimport React, { Component } from 'react';\nimport uuid from 'react-uuid';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PickModel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectValue: 'none',\n      models: []\n    };\n\n    this.renderModelOptions = models => {\n      return models.map(model => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          id: model.id,\n          children: model.name\n        }, uuid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.handleSelection = (callback, e) => {\n      const options = e.target.querySelector(\"option\");\n      const selectedOption = Array.from(options.find(option => option.id === e.target.value));\n      debugger;\n      this.props.addModelToStore(selectedOption.id);\n      callback(\"pickEngine\");\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/models').then(resp => resp.json()).then(json => {\n      this.setState({\n        models: json.map(model => {\n          return {\n            name: model.name,\n            id: model.id\n          };\n        })\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 mx-auto h-1/2 place-self-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-3xl mt-4\",\n          children: \"Select Model:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-1/2 h-12 mx-auto\",\n              value: this.state.selectValue,\n              onChange: e => this.handleSelection(this.props.updateStep, e),\n              readOnly: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"none\",\n                disabled: true,\n                hidden: true,\n                children: \"Select Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), this.renderModelOptions(this.state.models)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addModelToStore: id => dispatch({\n      type: 'ADD_MODEL',\n      modelId: id\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(PickModel);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/PickModel.js"],"names":["React","Component","uuid","connect","PickModel","state","selectValue","models","renderModelOptions","map","model","id","name","handleSelection","callback","e","options","target","querySelector","selectedOption","Array","from","find","option","value","props","addModelToStore","componentDidMount","fetch","then","resp","json","setState","render","updateStep","mapDispatchToProps","dispatch","type","modelId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport uuid from 'react-uuid'\r\nimport { connect } from 'react-redux';\r\n\r\nclass PickModel extends Component {\r\n\r\n  state = {\r\n    selectValue: 'none',\r\n    models: []\r\n  }\r\n\r\n  renderModelOptions = models => {\r\n    return models.map( model => {\r\n      return <option key={uuid()} id={model.id} >{model.name}</option>\r\n    })\r\n  }\r\n\r\n  handleSelection = (callback, e) => {\r\n    const options = e.target.querySelector(\"option\")\r\n    const selectedOption = Array.from(options.find( option => option.id === e.target.value))\r\n    debugger;\r\n\r\n    this.props.addModelToStore(selectedOption.id)\r\n    callback(\"pickEngine\")\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:3000/models')\r\n    .then( resp => resp.json())\r\n    .then( json => {\r\n      this.setState({\r\n        models: json.map( model => {\r\n          return{name: model.name, id: model.id}\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-1/2 mx-auto h-1/2 place-self-center\">\r\n        <div className=\"flex flex-col\">\r\n          <h1 className=\"text-center text-3xl mt-4\">Select Model:</h1>\r\n          <form>\r\n            <div className=\"flex mt-4\">\r\n              <select className=\"w-1/2 h-12 mx-auto\" value={this.state.selectValue} onChange={(e) => this.handleSelection(this.props.updateStep, e)} readOnly>\r\n                <option value=\"none\" disabled hidden>\r\n                  Select Model\r\n                </option>\r\n                {this.renderModelOptions(this.state.models)}\r\n              </select>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    addModelToStore: id => dispatch({type: 'ADD_MODEL', modelId: id})\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PickModel)"]},"metadata":{},"sourceType":"module"}