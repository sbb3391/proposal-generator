{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/containers/Machine.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import { useHistory } from 'react-router-dom'\n\nimport MachineOverview from '../components/MachineOverview';\nimport numeral from 'numeral';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Machine extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.returnCurrencyFormat = number => {\n      let newNum = numeral(number).format('$0,0.00');\n      return newNum;\n    };\n\n    this.returnPercentFormat = number => {\n      return numeral(number).format('0.0%');\n    };\n\n    this.handlePriceChange = event => {\n      const modelId = event.target.dataset.modelId;\n      const itemId = event.target.id;\n      const assemblyId = event.target.dataset.assemblyId;\n      const assembly = this.props.machine.assemblies.find(assembly => assembly.id == assemblyId && assembly.modelId == modelId);\n      const changingItem = assembly.items.find(i => i.itemId == itemId);\n      changingItem.unitPrice = event.target.value;\n      this.props.changeItemPrice(changingItem);\n    };\n\n    this.renderTableRows = () => {\n      let itemsArray = [];\n      const part_types = [\"engine\", \"delivery/install\", \"paper handling\", \"finishing\", \"print controller\", \"power supply\"];\n      this.props.machine.assemblies.map(assembly => assembly.items.forEach(item => itemsArray.push(item)));\n      return part_types.map(part => {\n        return itemsArray.filter(item => item.part_type === part).map(item => {\n          const sellingPriceValue = () => {\n            const assembly = this.props.machine.assemblies.find(assembly => assembly.id == item.assemblyId && assembly.modelId == item.modelId);\n            return assembly.items.find(i => i.id == item.itemId).unitPrice;\n          };\n\n          let percent = parseFloat(item.unitPrice) / parseFloat(item.branchFloor);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center w-20\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"w-96\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"branch-floor-price\",\n              className: \"text-center w-36\",\n              children: this.returnCurrencyFormat(item.branchFloor)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center w-36\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-28\",\n                \"data-assembly-id\": item.assemblyId,\n                \"data-model-id\": item.modelId,\n                id: item.itemId,\n                type: \"number\",\n                value: sellingPriceValue(),\n                onChange: this.handlePriceChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center w-28\",\n              children: this.returnPercentFormat(percent)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/machines/${this.props.match.params.id}`).then(resp => resp.json()).then(json => {\n      // sets the default unit price amount to the branch floor price\n      json.assemblies.forEach(assembly => assembly.items.forEach(i => {\n        i.unitPrice = i.branchFloor;\n      }));\n      const x = json;\n      this.props.addMachine(x);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full flex justify-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/5 h- mx-auto py-10 my-3 border-2 border-grey-200 rounded-lg text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"mx-auto h-full w-full text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"w-full block text-center border-b-2 border-black mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center w-20\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center w-96\",\n                children: \"Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center w-36\",\n                children: \"Branch Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center w-28\",\n                children: \"Selling Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center w-28\",\n                children: \"% of BF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"h-full overflow-auto block text-center\",\n            children: this.renderTableRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/3 h-full flex flex-col space-y-3\",\n        children: /*#__PURE__*/_jsxDEV(MachineOverview, {\n          machineAssemblies: this.props.machine.assemblies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  machine: state.machine\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addMachine: machine => dispatch({\n    type: 'ADD_MACHINE',\n    machine: machine\n  }),\n  changeItemPrice: item => dispatch({\n    type: 'CHANGE_ITEM_PRICE',\n    item: item\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Machine);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/containers/Machine.js"],"names":["React","Component","connect","MachineOverview","numeral","Machine","returnCurrencyFormat","number","newNum","format","returnPercentFormat","handlePriceChange","event","modelId","target","dataset","itemId","id","assemblyId","assembly","props","machine","assemblies","find","changingItem","items","i","unitPrice","value","changeItemPrice","renderTableRows","itemsArray","part_types","map","forEach","item","push","part","filter","part_type","sellingPriceValue","percent","parseFloat","branchFloor","description","componentDidMount","fetch","match","params","then","resp","json","x","addMachine","render","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAmB9BK,oBAnB8B,GAmBNC,MAAD,IAAY;AACjC,UAAIC,MAAM,GAAGJ,OAAO,CAACG,MAAD,CAAP,CAAgBE,MAAhB,CAAuB,SAAvB,CAAb;AACA,aAAOD,MAAP;AACD,KAtB6B;;AAAA,SAwB9BE,mBAxB8B,GAwBPH,MAAD,IAAY;AAChC,aAAOH,OAAO,CAACG,MAAD,CAAP,CAAgBE,MAAhB,CAAuB,MAAvB,CAAP;AACD,KA1B6B;;AAAA,SA4B9BE,iBA5B8B,GA4BTC,KAAD,IAAW;AAC7B,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBF,OAArC;AACA,YAAMG,MAAM,GAAGJ,KAAK,CAACE,MAAN,CAAaG,EAA5B;AACA,YAAMC,UAAU,GAAGN,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBG,UAAxC;AAEA,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BC,IAA9B,CAAoCJ,QAAQ,IAAIA,QAAQ,CAACF,EAAT,IAAeC,UAAf,IAA6BC,QAAQ,CAACN,OAAT,IAAoBA,OAAjG,CAAjB;AAEA,YAAOW,YAAY,GAAGL,QAAQ,CAACM,KAAT,CAAeF,IAAf,CAAqBG,CAAC,IAAIA,CAAC,CAACV,MAAF,IAAYA,MAAtC,CAAtB;AACAQ,MAAAA,YAAY,CAACG,SAAb,GAAyBf,KAAK,CAACE,MAAN,CAAac,KAAtC;AAEA,WAAKR,KAAL,CAAWS,eAAX,CAA2BL,YAA3B;AACD,KAvC6B;;AAAA,SAyC9BM,eAzC8B,GAyCZ,MAAM;AACtB,UAAIC,UAAU,GAAG,EAAjB;AAEA,YAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,kBAAX,EAA+B,gBAA/B,EAAiD,WAAjD,EAA8D,kBAA9D,EAAkF,cAAlF,CAAnB;AACA,WAAKZ,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BW,GAA9B,CAAmCd,QAAQ,IACzCA,QAAQ,CAACM,KAAT,CAAeS,OAAf,CAAwBC,IAAI,IAAIJ,UAAU,CAACK,IAAX,CAAgBD,IAAhB,CAAhC,CADF;AAIA,aAAOH,UAAU,CAACC,GAAX,CAAgBI,IAAI,IAAI;AAC7B,eAAON,UAAU,CAACO,MAAX,CAAmBH,IAAI,IAAIA,IAAI,CAACI,SAAL,KAAmBF,IAA9C,EAAoDJ,GAApD,CAAyDE,IAAI,IAAI;AAEtE,gBAAMK,iBAAiB,GAAG,MAAM;AAC9B,kBAAMrB,QAAQ,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BC,IAA9B,CAAoCJ,QAAQ,IAAIA,QAAQ,CAACF,EAAT,IAAekB,IAAI,CAACjB,UAApB,IAAkCC,QAAQ,CAACN,OAAT,IAAoBsB,IAAI,CAACtB,OAA3G,CAAjB;AAEA,mBAAOM,QAAQ,CAACM,KAAT,CAAeF,IAAf,CAAqBG,CAAC,IAAIA,CAAC,CAACT,EAAF,IAAQkB,IAAI,CAACnB,MAAvC,EAA+CW,SAAtD;AACD,WAJD;;AAMA,cAAIc,OAAO,GAAGC,UAAU,CAACP,IAAI,CAACR,SAAN,CAAV,GAA6Be,UAAU,CAACP,IAAI,CAACQ,WAAN,CAArD;AACA,8BACE;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,wBAAsBR,IAAI,CAACS;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,cAAA,EAAE,EAAC,oBAAP;AAA4B,cAAA,SAAS,EAAC,kBAAtC;AAAA,wBAA0D,KAAKtC,oBAAL,CAA0B6B,IAAI,CAACQ,WAA/B;AAA1D;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA,qCACE;AAAO,gBAAA,SAAS,EAAC,MAAjB;AAAwB,oCAAkBR,IAAI,CAACjB,UAA/C;AAA2D,iCAAeiB,IAAI,CAACtB,OAA/E;AAAwF,gBAAA,EAAE,EAAEsB,IAAI,CAACnB,MAAjG;AAAyG,gBAAA,IAAI,EAAC,QAA9G;AAAuH,gBAAA,KAAK,EAAEwB,iBAAiB,EAA/I;AAAmJ,gBAAA,QAAQ,EAAE,KAAK7B;AAAlK;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE;AAAI,cAAA,SAAS,EAAC,kBAAd;AAAA,wBAAkC,KAAKD,mBAAL,CAAyB+B,OAAzB;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SApBM,CAAP;AAqBD,OAtBM,CAAP;AAuBD,KAxE6B;AAAA;;AAE9BI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAE,kCAAiC,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwB/B,EAAG,EAA9D,CAAL,CACCgC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEOE,IAAI,IAAI;AAEb;AAEAA,MAAAA,IAAI,CAAC7B,UAAL,CAAgBY,OAAhB,CAAyBf,QAAQ,IAAIA,QAAQ,CAACM,KAAT,CAAeS,OAAf,CAAwBR,CAAC,IAAI;AAChEA,QAAAA,CAAC,CAACC,SAAF,GAAcD,CAAC,CAACiB,WAAhB;AACD,OAFoC,CAArC;AAIA,YAAMS,CAAC,GAAGD,IAAV;AAEA,WAAK/B,KAAL,CAAWiC,UAAX,CAAsBD,CAAtB;AACD,KAbD;AAcD;;AAyDDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,6EAAf;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,mCAAjB;AAAA,kCACE;AAAO,YAAA,SAAS,EAAC,uDAAjB;AAAA,mCACE;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAO,YAAA,SAAS,EAAC,wCAAjB;AAAA,sBACG,KAAKxB,eAAL;AADH;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,iBAAiB,EAAE,KAAKV,KAAL,CAAWC,OAAX,CAAmBC;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAlG6B;;AAqGhC,MAAMiC,eAAe,GAAGC,KAAK,KAC3B;AACEnC,EAAAA,OAAO,EAAEmC,KAAK,CAACnC;AADjB,CAD2B,CAA7B;;AAMA,MAAMoC,kBAAkB,GAAGC,QAAQ,KACjC;AACEL,EAAAA,UAAU,EAAEhC,OAAO,IAAIqC,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,aAAP;AAAsBtC,IAAAA,OAAO,EAAEA;AAA/B,GAAD,CADjC;AAEEQ,EAAAA,eAAe,EAAEM,IAAI,IAAIuB,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,mBAAP;AAA4BxB,IAAAA,IAAI,EAAEA;AAAlC,GAAD;AAFnC,CADiC,CAAnC;;AASA,eAAejC,OAAO,CAACqD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpD,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import { useHistory } from 'react-router-dom'\r\nimport MachineOverview from '../components/MachineOverview'\r\nimport numeral from 'numeral';\r\n\r\nclass Machine extends Component {\r\n\r\n  componentDidMount() {\r\n    fetch(`http://localhost:3000/machines/${this.props.match.params.id}`)\r\n    .then(resp => resp.json())\r\n    .then( json => {\r\n\r\n      // sets the default unit price amount to the branch floor price\r\n\r\n      json.assemblies.forEach( assembly => assembly.items.forEach( i => {\r\n        i.unitPrice = i.branchFloor\r\n      }))\r\n\r\n      const x = json\r\n\r\n      this.props.addMachine(x)\r\n    })\r\n  }\r\n\r\n  returnCurrencyFormat = (number) => {\r\n    let newNum = numeral(number).format('$0,0.00')\r\n    return newNum\r\n  }\r\n\r\n  returnPercentFormat = (number) => {\r\n    return numeral(number).format('0.0%')\r\n  }\r\n\r\n  handlePriceChange = (event) => {\r\n    const modelId = event.target.dataset.modelId\r\n    const itemId = event.target.id\r\n    const assemblyId = event.target.dataset.assemblyId\r\n\r\n    const assembly = this.props.machine.assemblies.find( assembly => assembly.id == assemblyId && assembly.modelId == modelId)\r\n\r\n    const  changingItem = assembly.items.find( i => i.itemId == itemId)\r\n    changingItem.unitPrice = event.target.value\r\n    \r\n    this.props.changeItemPrice(changingItem)\r\n  }\r\n\r\n  renderTableRows = () => {\r\n    let itemsArray = []\r\n\r\n    const part_types = [\"engine\", \"delivery/install\", \"paper handling\", \"finishing\", \"print controller\", \"power supply\"]\r\n    this.props.machine.assemblies.map( assembly => \r\n      assembly.items.forEach( item => itemsArray.push(item))\r\n    )\r\n    \r\n    return part_types.map( part => {\r\n      return itemsArray.filter( item => item.part_type === part).map( item => {\r\n\r\n        const sellingPriceValue = () => {\r\n          const assembly = this.props.machine.assemblies.find( assembly => assembly.id == item.assemblyId && assembly.modelId == item.modelId )\r\n\r\n          return assembly.items.find( i => i.id == item.itemId).unitPrice\r\n        }\r\n\r\n        let percent = parseFloat(item.unitPrice) / parseFloat(item.branchFloor)\r\n        return(\r\n          <tr>\r\n            <td className=\"text-center w-20\">1</td>\r\n            <td className=\"w-96\">{item.description}</td>\r\n            <td id=\"branch-floor-price\" className=\"text-center w-36\">{this.returnCurrencyFormat(item.branchFloor)}</td>\r\n            <td className=\"text-center w-36\">\r\n              <input className=\"w-28\" data-assembly-id={item.assemblyId} data-model-id={item.modelId} id={item.itemId} type=\"number\" value={sellingPriceValue()} onChange={this.handlePriceChange} />\r\n            </td> \r\n            <td className=\"text-center w-28\">{this.returnPercentFormat(percent)}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-full h-full flex justify-around\">\r\n        <div className=\"w-3/5 h- mx-auto py-10 my-3 border-2 border-grey-200 rounded-lg text-center\">\r\n          <table className=\"mx-auto h-full w-full text-center\">\r\n            <thead className=\"w-full block text-center border-b-2 border-black mb-2\">\r\n              <tr>\r\n                <td className=\"text-center w-20\">Quantity</td>\r\n                <td className=\"text-center w-96\">Item</td>\r\n                <td className=\"text-center w-36\">Branch Floor</td>\r\n                <td className=\"text-center w-28\">Selling Price</td>\r\n                <td className=\"text-center w-28\">% of BF</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"h-full overflow-auto block text-center\">\r\n              {this.renderTableRows()}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"w-1/3 h-full flex flex-col space-y-3\">\r\n          <MachineOverview machineAssemblies={this.props.machine.assemblies} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    machine: state.machine\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {\r\n    addMachine: machine => dispatch({type: 'ADD_MACHINE', machine: machine}),\r\n    changeItemPrice: item => dispatch({type: 'CHANGE_ITEM_PRICE', item: item})\r\n  }\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Machine);"]},"metadata":{},"sourceType":"module"}