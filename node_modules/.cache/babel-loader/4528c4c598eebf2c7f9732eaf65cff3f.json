{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PartsForAssembly from './PartsForAssembly';\nimport MachineAssemblies from './MachineAssemblies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EnginePick extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectAssemblies: [],\n      selectedParts: [],\n      activeAssemblyId: null\n    };\n\n    this.removeWindow = () => {\n      this.setState({\n        activeAssemblyId: null\n      });\n    };\n\n    this.handleAdd = e => {\n      debugger; // getting the index of the clicked assembly in the array of all assemblies in state\n\n      const indexOfClicked = this.state.selectAssemblies.indexOf(this.state.selectAssemblies.find(assembly => assembly.id == e.target.id));\n      this.setState({\n        activeAssemblyId: e.target.id // selectAssemblies: [...this.state.selectAssemblies.slice(0, indexOfClicked), ...this.state.selectAssemblies.slice(indexOfClicked + 1)]\n\n      });\n    };\n\n    this.renderPartsForAssembly = () => {\n      if (this.state.activeAssemblyId) {\n        const assemblies = this.state.selectAssemblies;\n        const selectedAssembly = assemblies.find(assembly => assembly.id == this.state.activeAssemblyId);\n        const requiredItems = selectedAssembly.items.filter(item => item.required !== false); // if the selected assembly has one or more unrequired items\n\n        if (requiredItems.length !== selectedAssembly.items.length) {\n          return /*#__PURE__*/_jsxDEV(PartsForAssembly, {\n            assemblyId: this.state.activeAssemblyId,\n            removeWindow: this.removeWindow,\n            step: this.props.step\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }, this);\n        } else {\n          const indexOfClicked = this.state.selectAssemblies.indexOf(this.state.selectAssemblies.find(assembly => assembly.id == this.state.activeAssemblyId));\n          this.setState({\n            selectAssemblies: [...this.state.selectAssemblies.slice(0, indexOfClicked), ...this.state.selectAssemblies.slice(indexOfClicked + 1)]\n          });\n        }\n      }\n    };\n\n    this.renderAssemblies = () => {\n      const stepAssemblies = this.state.selectAssemblies.filter(assembly => assembly.assembly_type === this.props.step);\n      return stepAssemblies.map(assembly => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assembly bg-blue-200 w-1/6 h-36 flex flex-col place-items-center justify-center border rounded-md mr-2 mb-2\",\n          id: assembly.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center font-bold cursor-pointer text-md\",\n            id: assembly.id,\n            onClick: this.handleAdd,\n            children: assembly.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-md text-xs p-1\",\n              children: \"What's This?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.renderNextButton = () => {\n      if (this.props.nextStep === \"submit\") {} else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.updateStep(this.props.nextStep),\n          className: \"border border-black rounded-md w-36\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`).then(resp => resp.json()).then(json => {\n      this.setState({\n        selectAssemblies: json\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full relative flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute z-10 w-full mx-auto h-full flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-2/3 h-full space-y-16 place-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 flex space-x-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Main Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Paper Handling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Paper Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Finishing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Print Controller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl text-center\",\n            children: [\"Select \", this.props.step, \" Assemblies:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-5/6 flex flex-wrap space\",\n            id: \"select-assemblies\",\n            children: this.renderAssemblies()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.props.updateStep(this.props.prevStep),\n              className: \"border border-black rounded-md w-36\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), this.renderNextButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/4 h-full mx-auto h-full flex flex-col border border-black\",\n          id: \"selected-items\",\n          children: /*#__PURE__*/_jsxDEV(MachineAssemblies, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), this.renderPartsForAssembly()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  modelId: state.modelId\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js"],"names":["React","Component","connect","PartsForAssembly","MachineAssemblies","EnginePick","state","selectAssemblies","selectedParts","activeAssemblyId","removeWindow","setState","handleAdd","e","indexOfClicked","indexOf","find","assembly","id","target","renderPartsForAssembly","assemblies","selectedAssembly","requiredItems","items","filter","item","required","length","props","step","slice","renderAssemblies","stepAssemblies","assembly_type","map","name","renderNextButton","nextStep","updateStep","componentDidMount","fetch","modelId","then","resp","json","render","prevStep","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PartsForAssembly from './PartsForAssembly'\r\nimport MachineAssemblies from './MachineAssemblies'\r\n\r\nclass EnginePick extends Component {\r\n\r\n  state = {\r\n    selectAssemblies: [],\r\n    selectedParts: [],\r\n    activeAssemblyId: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`)\r\n    .then(resp => resp.json())\r\n    .then(json => {\r\n      this.setState({\r\n        selectAssemblies: json\r\n      })\r\n    })\r\n  \r\n  }\r\n\r\n  removeWindow = () => {\r\n    this.setState({\r\n      activeAssemblyId: null\r\n    })\r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    debugger;\r\n    // getting the index of the clicked assembly in the array of all assemblies in state\r\n    const indexOfClicked = this.state.selectAssemblies.indexOf(this.state.selectAssemblies.find( assembly => assembly.id == e.target.id))\r\n    this.setState({\r\n      activeAssemblyId: e.target.id,\r\n      // selectAssemblies: [...this.state.selectAssemblies.slice(0, indexOfClicked), ...this.state.selectAssemblies.slice(indexOfClicked + 1)]\r\n    })\r\n  }\r\n\r\n  renderPartsForAssembly = () => {\r\n    if (this.state.activeAssemblyId) {\r\n      const assemblies = this.state.selectAssemblies\r\n      const selectedAssembly = assemblies.find( assembly => assembly.id == this.state.activeAssemblyId)\r\n      const requiredItems = selectedAssembly.items.filter( item => item.required !== false)\r\n      \r\n      // if the selected assembly has one or more unrequired items\r\n      if (requiredItems.length !== selectedAssembly.items.length) {\r\n        return(<PartsForAssembly assemblyId={this.state.activeAssemblyId} removeWindow={this.removeWindow} step={this.props.step}/>)\r\n      } else {\r\n        const indexOfClicked = this.state.selectAssemblies.indexOf(this.state.selectAssemblies.find( assembly => assembly.id == this.state.activeAssemblyId))\r\n        this.setState({\r\n          selectAssemblies: [...this.state.selectAssemblies.slice(0, indexOfClicked), ...this.state.selectAssemblies.slice(indexOfClicked + 1)]\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // renderPartsForAssembly = () => {\r\n  //   if (this.state.activeAssemblyId) {\r\n  //     return(<PartsForAssembly assemblyId={this.state.activeAssemblyId} removeWindow={this.removeWindow} step={this.props.step}/>)\r\n  //   }\r\n  // }\r\n\r\n\r\n  renderAssemblies = () => {\r\n    const stepAssemblies = this.state.selectAssemblies.filter( assembly => assembly.assembly_type === this.props.step)\r\n\r\n    return stepAssemblies.map( assembly => {\r\n      return(\r\n        <div className=\"assembly bg-blue-200 w-1/6 h-36 flex flex-col place-items-center justify-center border rounded-md mr-2 mb-2\" id={assembly.id}>\r\n          <h1 className=\"text-center font-bold cursor-pointer text-md\" id={assembly.id} onClick={this.handleAdd}>{assembly.name}</h1>\r\n          <div className=\"flex space-x-1 mt-2\">\r\n            <button className=\"border border-black rounded-md text-xs p-1\">What's This?</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderNextButton = () => {\r\n    if (this.props.nextStep === \"submit\") {\r\n\r\n    } else {\r\n      return(\r\n        <button onClick={() => this.props.updateStep(this.props.nextStep)} className=\"border border-black rounded-md w-36\">Next</button>\r\n      ) \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-full h-full relative flex flex-col\">\r\n        <div className=\"absolute z-10 w-full mx-auto h-full flex\">\r\n          <div className=\"flex flex-col w-2/3 h-full space-y-16 place-items-center\">\r\n            <div className=\"mt-4 flex space-x-8\">\r\n              <button className=\"border border-black rounded-lg p-2\">Main Unit</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Paper Handling</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Paper Output</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Finishing</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Print Controller</button>\r\n            </div>\r\n            <h1 className=\"text-2xl text-center\">Select {this.props.step} Assemblies:</h1>\r\n            <div className=\"w-5/6 flex flex-wrap space\" id=\"select-assemblies\">\r\n              {this.renderAssemblies()}\r\n            </div>\r\n            <div className=\"flex space-x-4\">\r\n              <button onClick={() => this.props.updateStep(this.props.prevStep)} className=\"border border-black rounded-md w-36\">Previous</button>\r\n              {this.renderNextButton()}\r\n            </div>\r\n          </div>\r\n          <div className=\"w-1/4 h-full mx-auto h-full flex flex-col border border-black\" id=\"selected-items\">\r\n            <MachineAssemblies />\r\n          </div>\r\n\r\n        </div>\r\n        {this.renderPartsForAssembly()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {modelId: state.modelId}\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {}\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick)\r\n"]},"metadata":{},"sourceType":"module"}