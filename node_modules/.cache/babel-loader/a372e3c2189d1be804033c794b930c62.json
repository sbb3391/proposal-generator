{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PartsForAssembly from '../components/PartsForAssembly';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EnginePick extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: true,\n      selectAssemblies: [],\n      selectedParts: [],\n      activeAssemblyId: null\n    };\n\n    this.removeWindow = () => {\n      this.setState({\n        activeAssemblyId: null\n      });\n    };\n\n    this.handleAdd = e => {\n      this.setState({\n        activeAssemblyId: e.target.id\n      });\n    };\n\n    this.renderPartsForAssembly = () => {\n      this.setState({\n        show: false\n      });\n      fetch(`http://localhost:3000/assemblies/${this.state.activeAssemblyId}/items_assemblies`).then(resp => resp.json()).then(json => {\n        if (this.state.activeAssemblyId) {\n          const requiredItems = json.filter(item => item.required !== false); // checking to see if there are any items that are optional (i.e not required). Only show select options window if there are unrequired options\n\n          if (requiredItems.length !== json.length) {\n            this.setState({\n              show: true\n            });\n          } else {\n            this.setState({\n              show: false\n            });\n          }\n        }\n      });\n    };\n\n    this.renderAssemblies = () => {\n      return this.state.selectAssemblies.map(assembly => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assembly bg-blue-200 w-1/6 h-36 flex flex-col place-items-center justify-center border rounded-md mr-2 mb-2\",\n          id: assembly.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center font-bold cursor-pointer text-md\",\n            id: assembly.id,\n            onClick: this.handleAdd,\n            children: assembly.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-1 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-md text-xs p-1\",\n              children: \"What's This?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.renderNextButton = () => {\n      if (this.props.nextStep === \"submit\") {} else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.updateStep(this.props.nextStep),\n          className: \"border border-black rounded-md w-36\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`).then(resp => resp.json()).then(json => {\n      const stepAssemblies = json.filter(assembly => assembly.assembly_type === this.props.step);\n      this.setState({\n        selectAssemblies: stepAssemblies\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full relative flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute z-10 w-11/12 mx-auto h-3/4 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col space-y-16 place-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 flex space-x-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Main Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Paper Handling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Paper Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Finishing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-4xl\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border border-black rounded-lg p-2\",\n              children: \"Print Controller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl text-center\",\n            children: [\"Select \", this.props.step, \" Assemblies:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-5/6 flex flex-wrap space\",\n            id: \"select-assemblies\",\n            children: this.renderAssemblies()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.props.updateStep(this.props.prevStep),\n              className: \"border border-black rounded-md w-36\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), this.renderNextButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/4 h-full\",\n          id: \"selected-items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), this.state.show ? /*#__PURE__*/_jsxDEV(PartsForAssembly, {\n        assemblyId: this.state.activeAssemblyId,\n        removeWindow: this.removeWindow,\n        step: this.props.step\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  modelId: state.modelId\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js"],"names":["React","Component","connect","PartsForAssembly","EnginePick","state","show","selectAssemblies","selectedParts","activeAssemblyId","removeWindow","setState","handleAdd","e","target","id","renderPartsForAssembly","fetch","then","resp","json","requiredItems","filter","item","required","length","renderAssemblies","map","assembly","name","renderNextButton","props","nextStep","updateStep","componentDidMount","modelId","stepAssemblies","assembly_type","step","render","prevStep","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PartsForAssembly from '../components/PartsForAssembly'\r\n\r\nclass EnginePick extends Component {\r\n\r\n  state = {\r\n    show: true,\r\n    selectAssemblies: [],\r\n    selectedParts: [],\r\n    activeAssemblyId: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`http://localhost:3000/models/${this.props.modelId}/assemblies`)\r\n    .then(resp => resp.json())\r\n    .then(json => {\r\n      const stepAssemblies = json.filter( assembly => assembly.assembly_type === this.props.step)\r\n\r\n      this.setState({\r\n        selectAssemblies: stepAssemblies\r\n      })\r\n    })\r\n  \r\n  }\r\n\r\n  removeWindow = () => {\r\n    this.setState({\r\n      activeAssemblyId: null\r\n    })\r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    this.setState({\r\n      activeAssemblyId: e.target.id\r\n    })\r\n  }\r\n\r\n  renderPartsForAssembly = () => {\r\n    this.setState({\r\n      show: false\r\n    })\r\n    fetch(`http://localhost:3000/assemblies/${this.state.activeAssemblyId}/items_assemblies`)\r\n    .then(resp => resp.json())\r\n    .then(json => {\r\n      if (this.state.activeAssemblyId) {\r\n        const requiredItems = json.filter( item => item.required !== false)\r\n        // checking to see if there are any items that are optional (i.e not required). Only show select options window if there are unrequired options\r\n        if (requiredItems.length !== json.length) {\r\n          this.setState({\r\n            show: true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            show: false\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  // renderPartsForAssembly = () => {\r\n  //   if (this.state.activeAssemblyId) {\r\n  //     return(<PartsForAssembly assemblyId={this.state.activeAssemblyId} removeWindow={this.removeWindow} step={this.props.step}/>)\r\n  //   }\r\n  // }\r\n\r\n\r\n  renderAssemblies = () => {\r\n    return this.state.selectAssemblies.map( assembly => {\r\n      return(\r\n        <div className=\"assembly bg-blue-200 w-1/6 h-36 flex flex-col place-items-center justify-center border rounded-md mr-2 mb-2\" id={assembly.id}>\r\n          <h1 className=\"text-center font-bold cursor-pointer text-md\" id={assembly.id} onClick={this.handleAdd}>{assembly.name}</h1>\r\n          <div className=\"flex space-x-1 mt-2\">\r\n            <button className=\"border border-black rounded-md text-xs p-1\">What's This?</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderNextButton = () => {\r\n    if (this.props.nextStep === \"submit\") {\r\n\r\n    } else {\r\n      return(\r\n        <button onClick={() => this.props.updateStep(this.props.nextStep)} className=\"border border-black rounded-md w-36\">Next</button>\r\n      ) \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-full h-full relative flex flex-col\">\r\n        <div className=\"absolute z-10 w-11/12 mx-auto h-3/4 flex\">\r\n          <div className=\"flex flex-col space-y-16 place-items-center\">\r\n            <div className=\"mt-4 flex space-x-8\">\r\n              <button className=\"border border-black rounded-lg p-2\">Main Unit</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Paper Handling</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Paper Output</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Finishing</button>\r\n              <span className=\"text-4xl\">&#x2192;</span>\r\n              <button className=\"border border-black rounded-lg p-2\">Print Controller</button>\r\n            </div>\r\n            <h1 className=\"text-2xl text-center\">Select {this.props.step} Assemblies:</h1>\r\n            <div className=\"w-5/6 flex flex-wrap space\" id=\"select-assemblies\">\r\n              {this.renderAssemblies()}\r\n            </div>\r\n            <div className=\"flex space-x-4\">\r\n              <button onClick={() => this.props.updateStep(this.props.prevStep)} className=\"border border-black rounded-md w-36\">Previous</button>\r\n              {this.renderNextButton()}\r\n            </div>\r\n          </div>\r\n          <div className=\"w-1/4 h-full\" id=\"selected-items\">\r\n\r\n          </div>\r\n\r\n        </div>\r\n        { this.state.show ? <PartsForAssembly assemblyId={this.state.activeAssemblyId} removeWindow={this.removeWindow} step={this.props.step}/> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {modelId: state.modelId}\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {}\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick)\r\n"]},"metadata":{},"sourceType":"module"}