{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/containers/Machine.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // import { useHistory } from 'react-router-dom'\n\nimport numeral from 'numeral';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Machine extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTableRows = () => {\n      let itemsArray = [];\n      const part_types = [\"engine\", \"delivery/install\", \"paper handling\", \"finishing\", \"print controller\", \"power supply\"];\n      this.props.machine.assemblies.map(assembly => assembly.items.forEach(item => itemsArray.push(item)));\n\n      returnCurrencyFormat = number => {\n        let newNum = numeral(number).format('$0,0.00');\n        return newNum;\n      };\n\n      return part_types.map(part => {\n        return itemsArray.filter(item => item.part_type === part).map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: item.branchFloor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: item.branchFloor,\n                className: \"text-center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this);\n        });\n      }); //     return(\n      //       <tr>\n      //         <td>1</td>\n      //         <td>{item.description}</td>\n      //         <td>{item.branchFloor}</td>\n      //         <td>\n      //           <input type=\"number\" value={item.branchFloor} />\n      //         </td>\n      //       </tr>\n      //     )\n      //   })\n      // })\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/machines/${this.props.match.params.id}`).then(resp => resp.json()).then(json => {\n      this.props.addMachine(json);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 mx-auto py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: \"Branch Floor Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: \"Selling Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  machine: state.machine\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addMachine: machine => dispatch({\n    type: 'ADD_MACHINE',\n    machine: machine\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Machine);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/containers/Machine.js"],"names":["React","Component","connect","numeral","Machine","renderTableRows","itemsArray","part_types","props","machine","assemblies","map","assembly","items","forEach","item","push","returnCurrencyFormat","number","newNum","format","part","filter","part_type","description","branchFloor","componentDidMount","fetch","match","params","id","then","resp","json","addMachine","render","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAU9BI,eAV8B,GAUZ,MAAM;AACtB,UAAIC,UAAU,GAAG,EAAjB;AAEA,YAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,kBAAX,EAA+B,gBAA/B,EAAiD,WAAjD,EAA8D,kBAA9D,EAAkF,cAAlF,CAAnB;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BC,GAA9B,CAAmCC,QAAQ,IACzCA,QAAQ,CAACC,KAAT,CAAeC,OAAf,CAAwBC,IAAI,IAAIT,UAAU,CAACU,IAAX,CAAgBD,IAAhB,CAAhC,CADF;;AAIAE,MAAAA,oBAAoB,GAAIC,MAAD,IAAY;AACjC,YAAIC,MAAM,GAAGhB,OAAO,CAACe,MAAD,CAAP,CAAgBE,MAAhB,CAAuB,SAAvB,CAAb;AACA,eAAOD,MAAP;AACD,OAHD;;AAKA,aAAOZ,UAAU,CAACI,GAAX,CAAgBU,IAAI,IAAI;AAC7B,eAAOf,UAAU,CAACgB,MAAX,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,SAAL,KAAmBF,IAA9C,EAAoDV,GAApD,CAAyDI,IAAI,IAAI;AACtE,8BACE;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKA,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA,wBAA6BT,IAAI,CAACU;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCACE;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,KAAK,EAAEV,IAAI,CAACU,WAAjC;AAA8C,gBAAA,SAAS,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXM,CAAP;AAYD,OAbM,CAAP,CAbsB,CA6BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAnD6B;AAAA;;AAE9BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAE,kCAAiC,KAAKnB,KAAL,CAAWoB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAA9D,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEOE,IAAI,IAAI;AACb,WAAKzB,KAAL,CAAW0B,UAAX,CAAsBD,IAAtB;AACD,KAJD;AAKD;;AA6CDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE;AAAA,gCACE;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,oBACG,KAAK9B,eAAL;AADH;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AArE6B;;AAwEhC,MAAM+B,eAAe,GAAGC,KAAK,KAC3B;AACE5B,EAAAA,OAAO,EAAE4B,KAAK,CAAC5B;AADjB,CAD2B,CAA7B;;AAMA,MAAM6B,kBAAkB,GAAGC,QAAQ,KACjC;AACEL,EAAAA,UAAU,EAAEzB,OAAO,IAAI8B,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,aAAP;AAAsB/B,IAAAA,OAAO,EAAEA;AAA/B,GAAD;AADjC,CADiC,CAAnC;;AAQA,eAAeP,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClC,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import { useHistory } from 'react-router-dom'\r\nimport numeral from 'numeral';\r\n\r\nclass Machine extends Component {\r\n\r\n  componentDidMount() {\r\n    fetch(`http://localhost:3000/machines/${this.props.match.params.id}`)\r\n    .then(resp => resp.json())\r\n    .then( json => {\r\n      this.props.addMachine(json)\r\n    })\r\n  }\r\n\r\n  renderTableRows = () => {\r\n    let itemsArray = []\r\n\r\n    const part_types = [\"engine\", \"delivery/install\", \"paper handling\", \"finishing\", \"print controller\", \"power supply\"]\r\n    this.props.machine.assemblies.map( assembly => \r\n      assembly.items.forEach( item => itemsArray.push(item))\r\n    )\r\n\r\n    returnCurrencyFormat = (number) => {\r\n      let newNum = numeral(number).format('$0,0.00')\r\n      return newNum\r\n    }\r\n\r\n    return part_types.map( part => {\r\n      return itemsArray.filter( item => item.part_type === part).map( item => {\r\n        return(\r\n          <tr >\r\n            <td className=\"text-center\">1</td>\r\n            <td>{item.description}</td>\r\n            <td className=\"text-center\">{item.branchFloor}</td>\r\n            <td>\r\n              <input type=\"number\" value={item.branchFloor} className=\"text-center\" />\r\n            </td>\r\n          </tr>\r\n        )\r\n      })\r\n    })\r\n\r\n\r\n    //     return(\r\n    //       <tr>\r\n    //         <td>1</td>\r\n    //         <td>{item.description}</td>\r\n    //         <td>{item.branchFloor}</td>\r\n    //         <td>\r\n    //           <input type=\"number\" value={item.branchFloor} />\r\n    //         </td>\r\n    //       </tr>\r\n    //     )\r\n    //   })\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"w-1/2 mx-auto py-4\">\r\n        <table>\r\n          <thead>\r\n            <td className=\"text-center\">Quantity</td>\r\n            <td className=\"text-center\">Item</td>\r\n            <td className=\"text-center\">Branch Floor Price</td>\r\n            <td className=\"text-center\">Selling Price</td>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderTableRows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    machine: state.machine\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {\r\n    addMachine: machine => dispatch({type: 'ADD_MACHINE', machine: machine})\r\n  }\r\n)\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Machine);"]},"metadata":{},"sourceType":"module"}