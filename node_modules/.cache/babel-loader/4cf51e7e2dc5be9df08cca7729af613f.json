{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/CompleteButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CompleteButton(props) {\n  _s();\n\n  const history = useHistory();\n\n  const createMachine = () => {\n    data = this.props.machineAssemblies;\n    fetch('http://localhost:3001/machines/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(resp => resp.json()).then(json => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-4xl\",\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"complete-button\",\n      className: \"static-button\",\n      onClick: () => history.push('/machines/create'),\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CompleteButton, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CompleteButton;\n\nconst mapStateToProps = state => ({\n  machineAssemblies: state.machine.assemblies\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapDispatchToProps, mapStateToProps)(CompleteButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"CompleteButton\");","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/CompleteButton.js"],"names":["React","Component","useHistory","connect","CompleteButton","props","history","createMachine","data","machineAssemblies","fetch","method","headers","body","JSON","stringify","then","resp","json","push","mapStateToProps","state","machine","assemblies","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC1BC,IAAAA,IAAI,GAAG,KAAKH,KAAL,CAAWI,iBAAlB;AAEAC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC/CC,MAAAA,MAAM,EAAE,MADuC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoC;AAK7CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALuC,KAA1C,CAAL,CAOCQ,IAPD,CAOMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPd,EAQCF,IARD,CAQME,IAAI,IAAI,CAEb,CAVD;AAWD,GAdD;;AAeA,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,EAAE,EAAC,iBAAX;AAA6B,MAAA,SAAS,EAAC,eAAvC;AAAuD,MAAA,OAAO,EAAE,MAAMZ,OAAO,CAACa,IAAR,CAAa,kBAAb,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAxBQf,c;UACSF,U;;;KADTE,c;;AA2BT,MAAMgB,eAAe,GAAGC,KAAK,KAC3B;AACEZ,EAAAA,iBAAiB,EAAEY,KAAK,CAACC,OAAN,CAAcC;AADnC,CAD2B,CAA7B;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KACjC,EADiC,CAAnC;;AAKA,eAAetB,OAAO,CAACqB,kBAAD,EAAqBJ,eAArB,CAAP,CAA6ChB,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction CompleteButton(props) {\r\n  const history = useHistory()\r\n\r\n  const createMachine = () => {\r\n    data = this.props.machineAssemblies\r\n\r\n    fetch('http://localhost:3001/machines/create', {\r\n    method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(resp => resp.json())\r\n    .then(json => {\r\n\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <span className=\"text-4xl\">&#x2192;</span>\r\n      <button id=\"complete-button\" className=\"static-button\" onClick={() => history.push('/machines/create')}>Complete</button>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    machineAssemblies: state.machine.assemblies\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {\r\n  }\r\n)\r\n\r\nexport default connect(mapDispatchToProps, mapStateToProps)(CompleteButton);\r\n"]},"metadata":{},"sourceType":"module"}