{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/statusButton.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StatusButton extends Component {\n  render() {\n    const remainingAssembliesOfThisType = this.props.remainingAssemblies.filter(assembly => assembly.assembly_type == this.props.text);\n    const remainingAssembliesBelongingToPickOneGroup = remainingAssembliesOfThisType.filter(assembly => assembly.pick_one_group);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: remainingAssembliesBelongingToPickOneGroup.length === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cursor-default border border-black rounded-lg p-2 bg-green-500 text-white font-bold\",\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cursor-default border border-black rounded-lg p-2 bg-red-500 text-white font-bold\",\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst mapStateToProps = state => ({\n  machineAssemblies: state.machine.assemblies,\n  remainingAssemblies: state.model.remainingAssemblies\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusButton);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/statusButton.js"],"names":["React","Component","connect","StatusButton","render","remainingAssembliesOfThisType","props","remainingAssemblies","filter","assembly","assembly_type","text","remainingAssembliesBelongingToPickOneGroup","pick_one_group","length","mapDispatchToProps","dispatch","mapStateToProps","state","machineAssemblies","machine","assemblies","model"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACnCG,EAAAA,MAAM,GAAG;AACP,UAAMC,6BAA6B,GAAG,KAAKC,KAAL,CAAWC,mBAAX,CAA+BC,MAA/B,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,aAAT,IAA0B,KAAKJ,KAAL,CAAWK,IAAxF,CAAtC;AACA,UAAMC,0CAA0C,GAAGP,6BAA6B,CAACG,MAA9B,CAAsCC,QAAQ,IAAIA,QAAQ,CAACI,cAA3D,CAAnD;AAEA,wBACE;AAAA,gBACID,0CAA0C,CAACE,MAA3C,KAAsD,CAAtD,gBACA;AAAQ,QAAA,SAAS,EAAC,qFAAlB;AAAA,kBAAyG,KAAKR,KAAL,CAAWK;AAApH;AAAA;AAAA;AAAA;AAAA,cADA,gBAEA;AAAQ,QAAA,SAAS,EAAC,mFAAlB;AAAA,kBAAuG,KAAKL,KAAL,CAAWK;AAAlH;AAAA;AAAA;AAAA;AAAA;AAHJ,qBADF;AASD;;AAdkC;;AAkBrC,MAAMI,kBAAkB,GAAIC,QAAD,KACzB,EADyB,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KACtB;AACEC,EAAAA,iBAAiB,EAAED,KAAK,CAACE,OAAN,CAAcC,UADnC;AAEEd,EAAAA,mBAAmB,EAAEW,KAAK,CAACI,KAAN,CAAYf;AAFnC,CADsB,CAAxB;;AAOA,eAAeL,OAAO,CAACe,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CZ,YAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass StatusButton extends Component {\r\n  render() {\r\n    const remainingAssembliesOfThisType = this.props.remainingAssemblies.filter( assembly => assembly.assembly_type == this.props.text)\r\n    const remainingAssembliesBelongingToPickOneGroup = remainingAssembliesOfThisType.filter( assembly => assembly.pick_one_group )\r\n\r\n    return (\r\n      <>\r\n        { remainingAssembliesBelongingToPickOneGroup.length === 0 ?\r\n          <button className=\"cursor-default border border-black rounded-lg p-2 bg-green-500 text-white font-bold\">{this.props.text}</button> :\r\n          <button className=\"cursor-default border border-black rounded-lg p-2 bg-red-500 text-white font-bold\">{this.props.text}</button> \r\n        }\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {}\r\n)\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    machineAssemblies: state.machine.assemblies,\r\n    remainingAssemblies: state.model.remainingAssemblies\r\n  }\r\n)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusButton);"]},"metadata":{},"sourceType":"module"}