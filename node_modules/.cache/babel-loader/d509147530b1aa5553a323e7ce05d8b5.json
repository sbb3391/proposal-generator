{"ast":null,"code":"var _jsxFileName = \"/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PartsForAssembly from './PartsForAssembly';\nimport MachineAssemblies from './MachineAssemblies';\nimport StatusButton from './statusButton';\nimport CompleteButton from './CompleteButton';\nimport { fetchAssemblies } from '../actions/fetchAssemblies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EnginePick extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedParts: [],\n      activeAssemblyId: null\n    };\n\n    this.removeWindow = () => {\n      this.props.removeClickedId();\n    };\n\n    this.handleAdd = e => {\n      // getting the index of the clicked assembly in the array of all assemblies in state\n      const clickedAssemblyId = e.target.id;\n      this.props.addAssembly(this.props.allAssemblies.find(assembly => assembly.id == clickedAssemblyId));\n    };\n\n    this.renderPartsForAssembly = () => {\n      if (this.props.clickedId) {\n        const assemblies = this.props.allAssemblies;\n        const selectedAssembly = assemblies.find(assembly => assembly.id == this.props.clickedId);\n        const requiredItems = selectedAssembly.items.filter(item => item.required !== false); // if the selected assembly has one or more unrequired items\n\n        if (requiredItems.length !== selectedAssembly.items.length) {\n          return /*#__PURE__*/_jsxDEV(PartsForAssembly, {\n            assemblyId: this.props.clickedId,\n            removeWindow: this.removeWindow,\n            step: this.props.step\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }, this);\n        }\n      }\n    };\n\n    this.renderAssemblies = () => {\n      const stepAssemblies = this.props.remainingAssemblies.filter(assembly => assembly.assembly_type === this.props.step);\n      return stepAssemblies.map(assembly => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative assembly bg-blue-200 w-40 h-36 flex flex-col place-items-center justify-center border rounded-md mr-2 mb-2\",\n          id: assembly.id,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center font-bold cursor-pointer text-md hover:underline\",\n            id: assembly.id,\n            onClick: this.handleAdd,\n            children: assembly.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"absolute right-1 bottom-1 text-md cursor-pointer text-lg transform duration-75 hover:-translate-y-1\",\n            children: \"\\uD83D\\uDEC8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.renderNextButton = () => {\n      if (this.props.nextStep === \"submit\") {} else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex place-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-6xl cursor-pointer\",\n            onClick: () => this.props.updateStep(this.props.nextStep),\n            children: \"\\uD83E\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this) // <button onClick={() => this.props.updateStep(this.props.nextStep)} className=\"border border-black rounded-md w-36\">Next</button>\n        ;\n      }\n    };\n\n    this.renderCompleteButton = () => {\n      if (this.props.remainingPickOneGroupIds.length === 0) {\n        return /*#__PURE__*/_jsxDEV(CompleteButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }, this);\n      }\n\n      const button = document.querySelector(\"#complete-button\");\n\n      if (button) {} // window.onload(\n      //   setIn\n      // )\n      // setInterval(() => {\n      //   this.moveButtonUp(completeButton)\n      // }, 500)\n\n    };\n\n    this.moveButtonUp = button => {\n      button.class = \"moving-button\";\n      setTimeout(() => button.class = \"static-button\", 200);\n    };\n  }\n\n  componentDidMount() {\n    // only fetch once, on the first render to get all the assemblies\n    if (this.props.allAssemblies.length === 0) {\n      debugger;\n      this.props.fetchAssemblies(this.props.modelId);\n    }\n  }\n\n  render() {\n    if (this.props.requesting) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please wait - assemblies loading!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full relative flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute z-10 w-full mx-auto h-full flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col w-2/3 h-full space-y-10 place-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 flex space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(StatusButton, {\n                text: \"main unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-4xl\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusButton, {\n                text: \"paper handling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-4xl\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusButton, {\n                text: \"paper output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-4xl\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusButton, {\n                text: \"finishing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-4xl\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StatusButton, {\n                text: \"controller\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), this.renderCompleteButton()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl text-center h-8\",\n              children: [\"Select \", this.props.step, \" Assemblies:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex w-5/6 h-1/2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex place-items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-6xl cursor-pointer\",\n                  onClick: () => this.props.updateStep(this.props.prevStep),\n                  children: \"\\uD83E\\uDCA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4/5 flex flex-wrap space mx-auto\",\n                id: \"select-assemblies\",\n                children: this.renderAssemblies()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), this.renderNextButton()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/4 mx-auto h-full flex flex-col border-2 border-grey-400 rounded-md overflow-auto py-4 space-y-2\",\n            id: \"selected-items\",\n            children: /*#__PURE__*/_jsxDEV(MachineAssemblies, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), this.renderPartsForAssembly()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  modelId: state.modelId,\n  clickedId: state.clickedAssemblyId,\n  allAssemblies: state.model.allAssemblies,\n  remainingAssemblies: state.model.remainingAssemblies,\n  remainingPickOneGroupIds: state.model.remainingPickOneGroupIds,\n  machineAssemblies: state.machine.assemblies,\n  requesting: state.requesting\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAssemblies: () => dispatch(fetchAssemblies()),\n  addAssembly: assembly => dispatch({\n    type: 'ADD_ASSEMBLY',\n    assembly: assembly\n  }),\n  removeClickedId: () => dispatch({\n    type: 'REMOVE_CLICKED_ID',\n    id: \"\"\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick);","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/EnginePick.js"],"names":["React","Component","connect","PartsForAssembly","MachineAssemblies","StatusButton","CompleteButton","fetchAssemblies","EnginePick","state","selectedParts","activeAssemblyId","removeWindow","props","removeClickedId","handleAdd","e","clickedAssemblyId","target","id","addAssembly","allAssemblies","find","assembly","renderPartsForAssembly","clickedId","assemblies","selectedAssembly","requiredItems","items","filter","item","required","length","step","renderAssemblies","stepAssemblies","remainingAssemblies","assembly_type","map","name","renderNextButton","nextStep","updateStep","renderCompleteButton","remainingPickOneGroupIds","button","document","querySelector","moveButtonUp","class","setTimeout","componentDidMount","modelId","render","requesting","prevStep","mapStateToProps","model","machineAssemblies","machine","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAIA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCQ,KAFiC,GAEzB;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,gBAAgB,EAAE;AAFZ,KAFyB;;AAAA,SAejCC,YAfiC,GAelB,MAAM;AACnB,WAAKC,KAAL,CAAWC,eAAX;AACD,KAjBgC;;AAAA,SAmBjCC,SAnBiC,GAmBpBC,CAAD,IAAO;AACjB;AACA,YAAMC,iBAAiB,GAAGD,CAAC,CAACE,MAAF,CAASC,EAAnC;AAEA,WAAKN,KAAL,CAAWO,WAAX,CAAuB,KAAKP,KAAL,CAAWQ,aAAX,CAAyBC,IAAzB,CAA+BC,QAAQ,IAAIA,QAAQ,CAACJ,EAAT,IAAeF,iBAA1D,CAAvB;AACD,KAxBgC;;AAAA,SA0BjCO,sBA1BiC,GA0BR,MAAM;AAC7B,UAAI,KAAKX,KAAL,CAAWY,SAAf,EAA0B;AACxB,cAAMC,UAAU,GAAG,KAAKb,KAAL,CAAWQ,aAA9B;AACA,cAAMM,gBAAgB,GAAGD,UAAU,CAACJ,IAAX,CAAiBC,QAAQ,IAAIA,QAAQ,CAACJ,EAAT,IAAe,KAAKN,KAAL,CAAWY,SAAvD,CAAzB;AAEA,cAAMG,aAAa,GAAGD,gBAAgB,CAACE,KAAjB,CAAuBC,MAAvB,CAA+BC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkB,KAAzD,CAAtB,CAJwB,CAMxB;;AACA,YAAIJ,aAAa,CAACK,MAAd,KAAyBN,gBAAgB,CAACE,KAAjB,CAAuBI,MAApD,EAA4D;AAC1D,8BAAO,QAAC,gBAAD;AAAkB,YAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWY,SAAzC;AAAoD,YAAA,YAAY,EAAE,KAAKb,YAAvE;AAAqF,YAAA,IAAI,EAAE,KAAKC,KAAL,CAAWqB;AAAtG;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF;AACF,KAtCgC;;AAAA,SAwCjCC,gBAxCiC,GAwCd,MAAM;AACvB,YAAMC,cAAc,GAAG,KAAKvB,KAAL,CAAWwB,mBAAX,CAA+BP,MAA/B,CAAuCP,QAAQ,IAAIA,QAAQ,CAACe,aAAT,KAA2B,KAAKzB,KAAL,CAAWqB,IAAzF,CAAvB;AAEA,aAAOE,cAAc,CAACG,GAAf,CAAoBhB,QAAQ,IAAI;AACrC,4BACE;AAAK,UAAA,SAAS,EAAC,qHAAf;AAAqI,UAAA,EAAE,EAAEA,QAAQ,CAACJ,EAAlJ;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,8DAAd;AAA6E,YAAA,EAAE,EAAEI,QAAQ,CAACJ,EAA1F;AAA8F,YAAA,OAAO,EAAE,KAAKJ,SAA5G;AAAA,sBAAwHQ,QAAQ,CAACiB;AAAjI;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,qGAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPM,CAAP;AAQD,KAnDgC;;AAAA,SAqDjCC,gBArDiC,GAqDd,MAAM;AACvB,UAAI,KAAK5B,KAAL,CAAW6B,QAAX,KAAwB,QAA5B,EAAsC,CAErC,CAFD,MAEO;AACL,4BACE;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,yBAAhB;AAA0C,YAAA,OAAO,EAAE,MAAM,KAAK7B,KAAL,CAAW8B,UAAX,CAAsB,KAAK9B,KAAL,CAAW6B,QAAjC,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,CAIE;AAJF;AAMD;AACF,KAhEgC;;AAAA,SAkEjCE,oBAlEiC,GAkEV,MAAM;AAC3B,UAAI,KAAK/B,KAAL,CAAWgC,wBAAX,CAAoCZ,MAApC,KAA+C,CAAnD,EAAuD;AACrD,4BAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,YAAMa,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAf;;AAEA,UAAIF,MAAJ,EAAY,CACX,CAR0B,CAU3B;AACA;AACA;AACA;AACA;AACA;;AAED,KAnFgC;;AAAA,SAqFjCG,YArFiC,GAqFjBH,MAAD,IAAY;AACzBA,MAAAA,MAAM,CAACI,KAAP,GAAe,eAAf;AAEAC,MAAAA,UAAU,CAAC,MAAML,MAAM,CAACI,KAAP,GAAe,eAAtB,EAAuC,GAAvC,CAAV;AACD,KAzFgC;AAAA;;AAOjCE,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAI,KAAKvC,KAAL,CAAWQ,aAAX,CAAyBY,MAAzB,KAAoC,CAAxC,EAA2C;AACzC;AACA,WAAKpB,KAAL,CAAWN,eAAX,CAA2B,KAAKM,KAAL,CAAWwC,OAAtC;AACD;AACF;;AAgFDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKzC,KAAL,CAAW0C,UAAf,EAA2B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,0CAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,0DAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,sCACE,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBATF,EAUG,KAAKX,oBAAL,EAVH;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE;AAAI,cAAA,SAAS,EAAC,0BAAd;AAAA,oCAAiD,KAAK/B,KAAL,CAAWqB,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,yBAAf;AAAA,uCACE;AAAM,kBAAA,SAAS,EAAC,yBAAhB;AAA0C,kBAAA,OAAO,EAAE,MAAM,KAAKrB,KAAL,CAAW8B,UAAX,CAAsB,KAAK9B,KAAL,CAAW2C,QAAjC,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,oCAAf;AAAoD,gBAAA,EAAE,EAAC,mBAAvD;AAAA,0BACG,KAAKrB,gBAAL;AADH;AAAA;AAAA;AAAA;AAAA,sBAJF,EAOK,KAAKM,gBAAL,EAPL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAyBE;AAAK,YAAA,SAAS,EAAC,qGAAf;AAAqH,YAAA,EAAE,EAAC,gBAAxH;AAAA,mCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EA+BG,KAAKjB,sBAAL,EA/BH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAmCD;AACF;;AArIgC;;AAwInC,MAAMiC,eAAe,GAAGhD,KAAK,KAC3B;AACE4C,EAAAA,OAAO,EAAE5C,KAAK,CAAC4C,OADjB;AAEE5B,EAAAA,SAAS,EAAEhB,KAAK,CAACQ,iBAFnB;AAGEI,EAAAA,aAAa,EAAEZ,KAAK,CAACiD,KAAN,CAAYrC,aAH7B;AAIEgB,EAAAA,mBAAmB,EAAE5B,KAAK,CAACiD,KAAN,CAAYrB,mBAJnC;AAKEQ,EAAAA,wBAAwB,EAAEpC,KAAK,CAACiD,KAAN,CAAYb,wBALxC;AAMEc,EAAAA,iBAAiB,EAAElD,KAAK,CAACmD,OAAN,CAAclC,UANnC;AAOE6B,EAAAA,UAAU,EAAE9C,KAAK,CAAC8C;AAPpB,CAD2B,CAA7B;;AAYA,MAAMM,kBAAkB,GAAGC,QAAQ,KACjC;AACEvD,EAAAA,eAAe,EAAE,MAAMuD,QAAQ,CAACvD,eAAe,EAAhB,CADjC;AAEEa,EAAAA,WAAW,EAAEG,QAAQ,IAAIuC,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,cAAP;AAAuBxC,IAAAA,QAAQ,EAAEA;AAAjC,GAAD,CAFnC;AAGET,EAAAA,eAAe,EAAE,MAAMgD,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAE,mBAAP;AAA4B5C,IAAAA,EAAE,EAAE;AAAhC,GAAD;AAHjC,CADiC,CAAnC;;AAQA,eAAejB,OAAO,CAACuD,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrD,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PartsForAssembly from './PartsForAssembly'\r\nimport MachineAssemblies from './MachineAssemblies'\r\nimport StatusButton from './statusButton'\r\nimport CompleteButton from './CompleteButton'\r\nimport { fetchAssemblies } from '../actions/fetchAssemblies'\r\n\r\n\r\n\r\nclass EnginePick extends Component {\r\n\r\n  state = {\r\n    selectedParts: [],\r\n    activeAssemblyId: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // only fetch once, on the first render to get all the assemblies\r\n    if (this.props.allAssemblies.length === 0) {\r\n      debugger;\r\n      this.props.fetchAssemblies(this.props.modelId)\r\n    }\r\n  }\r\n\r\n  removeWindow = () => {\r\n    this.props.removeClickedId()\r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    // getting the index of the clicked assembly in the array of all assemblies in state\r\n    const clickedAssemblyId = e.target.id\r\n\r\n    this.props.addAssembly(this.props.allAssemblies.find( assembly => assembly.id == clickedAssemblyId))\r\n  }\r\n\r\n  renderPartsForAssembly = () => {\r\n    if (this.props.clickedId) {\r\n      const assemblies = this.props.allAssemblies\r\n      const selectedAssembly = assemblies.find( assembly => assembly.id == this.props.clickedId)\r\n\r\n      const requiredItems = selectedAssembly.items.filter( item => item.required !== false)\r\n      \r\n      // if the selected assembly has one or more unrequired items\r\n      if (requiredItems.length !== selectedAssembly.items.length) {\r\n        return(<PartsForAssembly assemblyId={this.props.clickedId} removeWindow={this.removeWindow} step={this.props.step}/>)\r\n      }\r\n    }\r\n  }\r\n\r\n  renderAssemblies = () => {\r\n    const stepAssemblies = this.props.remainingAssemblies.filter( assembly => assembly.assembly_type === this.props.step)\r\n\r\n    return stepAssemblies.map( assembly => {\r\n      return(\r\n        <div className=\"relative assembly bg-blue-200 w-40 h-36 flex flex-col place-items-center justify-center border rounded-md mr-2 mb-2\" id={assembly.id}>\r\n          <h1 className=\"text-center font-bold cursor-pointer text-md hover:underline\" id={assembly.id} onClick={this.handleAdd}>{assembly.name}</h1>\r\n          <span className=\"absolute right-1 bottom-1 text-md cursor-pointer text-lg transform duration-75 hover:-translate-y-1\">&#128712;</span>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderNextButton = () => {\r\n    if (this.props.nextStep === \"submit\") {\r\n\r\n    } else {\r\n      return(\r\n        <div className=\"flex place-items-center\">\r\n          <span className=\"text-6xl cursor-pointer\" onClick={() => this.props.updateStep(this.props.nextStep)}>&#129185;</span>\r\n        </div>\r\n        // <button onClick={() => this.props.updateStep(this.props.nextStep)} className=\"border border-black rounded-md w-36\">Next</button>\r\n      ) \r\n    }\r\n  }\r\n\r\n  renderCompleteButton = () => {\r\n    if (this.props.remainingPickOneGroupIds.length === 0 ) {\r\n      return <CompleteButton />\r\n    }\r\n\r\n    const button = document.querySelector(\"#complete-button\")\r\n\r\n    if (button) {\r\n    }\r\n\r\n    // window.onload(\r\n    //   setIn\r\n    // )\r\n    // setInterval(() => {\r\n    //   this.moveButtonUp(completeButton)\r\n    // }, 500)\r\n      \r\n  }\r\n\r\n  moveButtonUp = (button) => {\r\n    button.class = \"moving-button\"\r\n\r\n    setTimeout(() => button.class = \"static-button\", 200)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    if (this.props.requesting) {\r\n      return <h1>Please wait - assemblies loading!</h1>\r\n    } else {\r\n      return (\r\n        <div className=\"w-full h-full relative flex flex-col\">\r\n          <div className=\"absolute z-10 w-full mx-auto h-full flex\">\r\n            <div className=\"flex flex-col w-2/3 h-full space-y-10 place-items-center\">\r\n              <div className=\"mt-4 flex space-x-4\">\r\n                <StatusButton text=\"main unit\"/>\r\n                <span className=\"text-4xl\">&#x2192;</span>\r\n                <StatusButton text=\"paper handling\"/>\r\n                <span className=\"text-4xl\">&#x2192;</span>\r\n                <StatusButton text=\"paper output\"/>\r\n                <span className=\"text-4xl\">&#x2192;</span>\r\n                <StatusButton text=\"finishing\"/>\r\n                <span className=\"text-4xl\">&#x2192;</span>\r\n                <StatusButton text=\"controller\"/>\r\n                {this.renderCompleteButton()}\r\n              </div>\r\n              <h1 className=\"text-2xl text-center h-8\">Select {this.props.step} Assemblies:</h1>\r\n              <div className=\"flex w-5/6 h-1/2\">\r\n                <div className=\"flex place-items-center\">\r\n                  <span className=\"text-6xl cursor-pointer\" onClick={() => this.props.updateStep(this.props.prevStep)}>&#129184;</span>\r\n                </div>\r\n                <div className=\"w-4/5 flex flex-wrap space mx-auto\" id=\"select-assemblies\">\r\n                  {this.renderAssemblies()}\r\n                </div>\r\n                  {this.renderNextButton()}\r\n              </div>\r\n            </div>\r\n            <div className=\"w-1/4 mx-auto h-full flex flex-col border-2 border-grey-400 rounded-md overflow-auto py-4 space-y-2\" id=\"selected-items\">\r\n              <MachineAssemblies />\r\n            </div>\r\n\r\n          </div>\r\n          {this.renderPartsForAssembly()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    modelId: state.modelId,\r\n    clickedId: state.clickedAssemblyId,\r\n    allAssemblies: state.model.allAssemblies,\r\n    remainingAssemblies: state.model.remainingAssemblies,\r\n    remainingPickOneGroupIds: state.model.remainingPickOneGroupIds,\r\n    machineAssemblies: state.machine.assemblies,\r\n    requesting: state.requesting\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n  {\r\n    fetchAssemblies: () => dispatch(fetchAssemblies()),\r\n    addAssembly: assembly => dispatch({type: 'ADD_ASSEMBLY', assembly: assembly}),\r\n    removeClickedId: () => dispatch({type: 'REMOVE_CLICKED_ID', id: \"\"})\r\n  }\r\n)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnginePick)\r\n"]},"metadata":{},"sourceType":"module"}