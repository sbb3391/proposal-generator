{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst pdf = machine => {\n  let itemsTable = {\n    table: {\n      body: [['All of the items in this configuration']]\n    }\n  };\n\n  const addMachineItems = (itemsTable, machineAssemblies) => {\n    let newItemsTable;\n    machineAssemblies.forEach(mi => {\n      mi.items.forEach(item => {\n        newItemsTable = { ...itemsTable,\n          table: { ...itemsTable.table,\n            body: [...itemsTable.table.body, [item.description]]\n          }\n        };\n        debugger;\n      });\n    });\n    return addItemsToDd(dd, newItemsTable);\n  };\n\n  const addItemsToDd = (documentData, machineItems) => {\n    const newDd = { ...documentData,\n      content: [...documentData.content, machineItems]\n    };\n    return newDd;\n  };\n\n  let dd = {\n    content: [{\n      text: 'This paragraph uses header style and extends the alignment property',\n      style: 'header',\n      alignment: 'center'\n    }]\n  };\n  console.log(\"addMachineItems\", addMachineItems(itemsTable, machine.assemblies));\n  pdfMake.createPdf(addMachineItems(itemsTable, machine.assemblies)).open();\n};\n\nexport { pdf };","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/pdf.js"],"names":["pdfMake","pdfFonts","vfs","pdf","machine","itemsTable","table","body","addMachineItems","machineAssemblies","newItemsTable","forEach","mi","items","item","description","addItemsToDd","dd","documentData","machineItems","newDd","content","text","style","alignment","console","log","assemblies","createPdf","open"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACAD,OAAO,CAACE,GAAR,GAAcD,QAAQ,CAACD,OAAT,CAAiBE,GAA/B;;AAEA,MAAMC,GAAG,GAAIC,OAAD,IAAa;AAEvB,MAAIC,UAAU,GAAG;AACfC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CACJ,CAAC,wCAAD,CADI;AADD;AADQ,GAAjB;;AAQA,QAAMC,eAAe,GAAG,CAACH,UAAD,EAAaI,iBAAb,KAAmC;AAEzD,QAAIC,aAAJ;AAEAD,IAAAA,iBAAiB,CAACE,OAAlB,CAA4BC,EAAD,IAAQ;AACjCA,MAAAA,EAAE,CAACC,KAAH,CAASF,OAAT,CAAkBG,IAAI,IAAI;AACxBJ,QAAAA,aAAa,GAAG,EACd,GAAGL,UADW;AAEdC,UAAAA,KAAK,EAAE,EACL,GAAGD,UAAU,CAACC,KADT;AAELC,YAAAA,IAAI,EAAE,CACJ,GAAGF,UAAU,CAACC,KAAX,CAAiBC,IADhB,EAEJ,CAACO,IAAI,CAACC,WAAN,CAFI;AAFD;AAFO,SAAhB;AAUA;AACD,OAZD;AAaD,KAdD;AAgBA,WAAOC,YAAY,CAACC,EAAD,EAAKP,aAAL,CAAnB;AACD,GArBD;;AAsBA,QAAMM,YAAY,GAAG,CAACE,YAAD,EAAeC,YAAf,KAAgC;AACpD,UAAMC,KAAK,GAAG,EACZ,GAAGF,YADS;AAEZG,MAAAA,OAAO,EAAE,CACP,GAAGH,YAAY,CAACG,OADT,EAEPF,YAFO;AAFG,KAAd;AAQC,WAAOC,KAAP;AACD,GAVD;;AAYA,MAAIH,EAAE,GAAG;AACPI,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,qEADR;AAEEC,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADO;AADF,GAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BlB,eAAe,CAACH,UAAD,EAAaD,OAAO,CAACuB,UAArB,CAA9C;AAEA3B,EAAAA,OAAO,CAAC4B,SAAR,CAAkBpB,eAAe,CAACH,UAAD,EAAaD,OAAO,CAACuB,UAArB,CAAjC,EAAmEE,IAAnE;AAED,CA3DD;;AA6DA,SAAS1B,GAAT","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst pdf = (machine) => {\r\n\r\n  let itemsTable = {\r\n    table: {\r\n      body: [\r\n        ['All of the items in this configuration']\r\n      ]\r\n    }\r\n  }\r\n\r\n  const addMachineItems = (itemsTable, machineAssemblies) => {\r\n\r\n    let newItemsTable;\r\n\r\n    machineAssemblies.forEach( (mi) => {\r\n      mi.items.forEach( item => {\r\n        newItemsTable = {\r\n          ...itemsTable,\r\n          table: {\r\n            ...itemsTable.table,\r\n            body: [\r\n              ...itemsTable.table.body,\r\n              [item.description]     \r\n            ]\r\n          }\r\n        }\r\n        debugger;\r\n      })\r\n    })\r\n\r\n    return addItemsToDd(dd, newItemsTable)\r\n  }\r\n  const addItemsToDd = (documentData, machineItems) => {\r\n   const newDd = {\r\n     ...documentData,\r\n     content: [\r\n       ...documentData.content,\r\n       machineItems\r\n     ]\r\n   }\r\n\r\n    return newDd\r\n  }\r\n\r\n  let dd = {\r\n    content: [\r\n      {\r\n        text: 'This paragraph uses header style and extends the alignment property',\r\n        style: 'header',\r\n        alignment: 'center'\r\n      }\r\n      \r\n    ]\r\n  }\r\n\r\n  console.log(\"addMachineItems\", addMachineItems(itemsTable, machine.assemblies))\r\n  \r\n  pdfMake.createPdf(addMachineItems(itemsTable, machine.assemblies)).open();\r\n\r\n}\r\n\r\nexport { pdf }"]},"metadata":{},"sourceType":"module"}