{"ast":null,"code":"import pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst pdf = machine => {\n  let itemsTable = {\n    table: {\n      body: [[{\n        text: 'All of the items in this configuration',\n        colSpan: 2\n      }]]\n    }\n  };\n\n  const addMachineItems = (itemsTable, machineAssemblies) => {\n    let newItemsTable = itemsTable; // This needs to be simpler. Items array should be defined in state because it is used in multiple other places\n\n    let itemsArray = [];\n    machineAssemblies.forEach(mi => {\n      mi.items.forEach(item => {\n        newItemsTable = { ...newItemsTable,\n          table: { ...newItemsTable.table,\n            body: [...newItemsTable.table.body, [item.description]]\n          }\n        };\n        console.log(newItemsTable.table.body);\n      });\n    });\n    return addItemsToDd(dd, newItemsTable);\n  };\n\n  const addItemsToDd = (documentData, machineItems) => {\n    const newDd = { ...documentData,\n      content: [...documentData.content, machineItems]\n    };\n    return newDd;\n  };\n\n  let dd = {\n    content: [{\n      text: 'This paragraph uses header style and extends the alignment property',\n      style: 'header',\n      alignment: 'center'\n    }]\n  };\n  console.log(\"addMachineItems\", addMachineItems(itemsTable, machine.assemblies));\n  pdfMake.createPdf(addMachineItems(itemsTable, machine.assemblies)).open();\n};\n\nexport { pdf };","map":{"version":3,"sources":["/home/sbb3391/code/projects/react-proposal-generator/src/components/pdf.js"],"names":["pdfMake","pdfFonts","vfs","pdf","machine","itemsTable","table","body","text","colSpan","addMachineItems","machineAssemblies","newItemsTable","itemsArray","forEach","mi","items","item","description","console","log","addItemsToDd","dd","documentData","machineItems","newDd","content","style","alignment","assemblies","createPdf","open"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACAD,OAAO,CAACE,GAAR,GAAcD,QAAQ,CAACD,OAAT,CAAiBE,GAA/B;;AAEA,MAAMC,GAAG,GAAIC,OAAD,IAAa;AAEvB,MAAIC,UAAU,GAAG;AACfC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CACJ,CAAC;AAACC,QAAAA,IAAI,EAAE,wCAAP;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAD,CADI;AADD;AADQ,GAAjB;;AAQA,QAAMC,eAAe,GAAG,CAACL,UAAD,EAAaM,iBAAb,KAAmC;AAEzD,QAAIC,aAAa,GAAGP,UAApB,CAFyD,CAGzD;;AACA,QAAIQ,UAAU,GAAG,EAAjB;AAIAF,IAAAA,iBAAiB,CAACG,OAAlB,CAA4BC,EAAD,IAAQ;AACjCA,MAAAA,EAAE,CAACC,KAAH,CAASF,OAAT,CAAkBG,IAAI,IAAI;AACxBL,QAAAA,aAAa,GAAG,EACd,GAAGA,aADW;AAEdN,UAAAA,KAAK,EAAE,EACL,GAAGM,aAAa,CAACN,KADZ;AAELC,YAAAA,IAAI,EAAE,CACJ,GAAGK,aAAa,CAACN,KAAd,CAAoBC,IADnB,EAEJ,CAACU,IAAI,CAACC,WAAN,CAFI;AAFD;AAFO,SAAhB;AAUAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,aAAa,CAACN,KAAd,CAAoBC,IAAhC;AACD,OAZD;AAaD,KAdD;AAgBA,WAAOc,YAAY,CAACC,EAAD,EAAKV,aAAL,CAAnB;AACD,GAzBD;;AA4BA,QAAMS,YAAY,GAAG,CAACE,YAAD,EAAeC,YAAf,KAAgC;AACpD,UAAMC,KAAK,GAAG,EACZ,GAAGF,YADS;AAEZG,MAAAA,OAAO,EAAE,CACP,GAAGH,YAAY,CAACG,OADT,EAEPF,YAFO;AAFG,KAAd;AAQC,WAAOC,KAAP;AACD,GAVD;;AAYA,MAAIH,EAAE,GAAG;AACPI,IAAAA,OAAO,EAAE,CACP;AACElB,MAAAA,IAAI,EAAE,qEADR;AAEEmB,MAAAA,KAAK,EAAE,QAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADO;AADF,GAAT;AAWAT,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BV,eAAe,CAACL,UAAD,EAAaD,OAAO,CAACyB,UAArB,CAA9C;AAEA7B,EAAAA,OAAO,CAAC8B,SAAR,CAAkBpB,eAAe,CAACL,UAAD,EAAaD,OAAO,CAACyB,UAArB,CAAjC,EAAmEE,IAAnE;AAED,CAjED;;AAmEA,SAAS5B,GAAT","sourcesContent":["import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst pdf = (machine) => {\r\n\r\n  let itemsTable = {\r\n    table: {\r\n      body: [\r\n        [{text: 'All of the items in this configuration', colSpan: 2}]\r\n      ]\r\n    }\r\n  }\r\n\r\n  const addMachineItems = (itemsTable, machineAssemblies) => {\r\n\r\n    let newItemsTable = itemsTable\r\n    // This needs to be simpler. Items array should be defined in state because it is used in multiple other places\r\n    let itemsArray = []\r\n\r\n\r\n\r\n    machineAssemblies.forEach( (mi) => {\r\n      mi.items.forEach( item => {\r\n        newItemsTable = {\r\n          ...newItemsTable,\r\n          table: {\r\n            ...newItemsTable.table,\r\n            body: [\r\n              ...newItemsTable.table.body,\r\n              [item.description]     \r\n            ]\r\n          }\r\n        }\r\n        console.log(newItemsTable.table.body)\r\n      })\r\n    })\r\n\r\n    return addItemsToDd(dd, newItemsTable)\r\n  }\r\n\r\n\r\n  const addItemsToDd = (documentData, machineItems) => {\r\n   const newDd = {\r\n     ...documentData,\r\n     content: [\r\n       ...documentData.content,\r\n       machineItems\r\n     ]\r\n   }\r\n\r\n    return newDd\r\n  }\r\n\r\n  let dd = {\r\n    content: [\r\n      {\r\n        text: 'This paragraph uses header style and extends the alignment property',\r\n        style: 'header',\r\n        alignment: 'center'\r\n      }\r\n      \r\n    ]\r\n  }\r\n\r\n  console.log(\"addMachineItems\", addMachineItems(itemsTable, machine.assemblies))\r\n  \r\n  pdfMake.createPdf(addMachineItems(itemsTable, machine.assemblies)).open();\r\n\r\n}\r\n\r\nexport { pdf }"]},"metadata":{},"sourceType":"module"}